//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssInitParameters) DeepCopyInto(out *AbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssInitParameters.
func (in *AbfssInitParameters) DeepCopy() *AbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(AbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssObservation) DeepCopyInto(out *AbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssObservation.
func (in *AbfssObservation) DeepCopy() *AbfssObservation {
	if in == nil {
		return nil
	}
	out := new(AbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssParameters) DeepCopyInto(out *AbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssParameters.
func (in *AbfssParameters) DeepCopy() *AbfssParameters {
	if in == nil {
		return nil
	}
	out := new(AbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleInitParameters) DeepCopyInto(out *AutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleInitParameters.
func (in *AutoscaleInitParameters) DeepCopy() *AutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleObservation) DeepCopyInto(out *AutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleObservation.
func (in *AutoscaleObservation) DeepCopy() *AutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleParameters) DeepCopyInto(out *AutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleParameters.
func (in *AutoscaleParameters) DeepCopy() *AutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesInitParameters) DeepCopyInto(out *AwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesInitParameters.
func (in *AwsAttributesInitParameters) DeepCopy() *AwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesObservation) DeepCopyInto(out *AwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesObservation.
func (in *AwsAttributesObservation) DeepCopy() *AwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesParameters) DeepCopyInto(out *AwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesParameters.
func (in *AwsAttributesParameters) DeepCopy() *AwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesInitParameters) DeepCopyInto(out *AzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]LogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesInitParameters.
func (in *AzureAttributesInitParameters) DeepCopy() *AzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesObservation) DeepCopyInto(out *AzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]LogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesObservation.
func (in *AzureAttributesObservation) DeepCopy() *AzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesParameters) DeepCopyInto(out *AzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]LogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesParameters.
func (in *AzureAttributesParameters) DeepCopy() *AzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthInitParameters) DeepCopyInto(out *BasicAuthInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthInitParameters.
func (in *BasicAuthInitParameters) DeepCopy() *BasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthObservation) DeepCopyInto(out *BasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthObservation.
func (in *BasicAuthObservation) DeepCopy() *BasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(BasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthParameters) DeepCopyInto(out *BasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthParameters.
func (in *BasicAuthParameters) DeepCopy() *BasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsInitParameters) DeepCopyInto(out *ClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsInitParameters.
func (in *ClientsInitParameters) DeepCopy() *ClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsObservation) DeepCopyInto(out *ClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsObservation.
func (in *ClientsObservation) DeepCopy() *ClientsObservation {
	if in == nil {
		return nil
	}
	out := new(ClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsParameters) DeepCopyInto(out *ClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsParameters.
func (in *ClientsParameters) DeepCopy() *ClientsParameters {
	if in == nil {
		return nil
	}
	out := new(ClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitParameters) DeepCopyInto(out *ClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.IsPinned != nil {
		in, out := &in.IsPinned, &out.IsPinned
		*out = new(bool)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitParameters.
func (in *ClusterInitParameters) DeepCopy() *ClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfInitParameters) DeepCopyInto(out *ClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfInitParameters.
func (in *ClusterLogConfInitParameters) DeepCopy() *ClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfObservation) DeepCopyInto(out *ClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfObservation.
func (in *ClusterLogConfObservation) DeepCopy() *ClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfParameters) DeepCopyInto(out *ClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfParameters.
func (in *ClusterLogConfParameters) DeepCopy() *ClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoInitParameters) DeepCopyInto(out *ClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoInitParameters.
func (in *ClusterMountInfoInitParameters) DeepCopy() *ClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoObservation) DeepCopyInto(out *ClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoObservation.
func (in *ClusterMountInfoObservation) DeepCopy() *ClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoParameters) DeepCopyInto(out *ClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoParameters.
func (in *ClusterMountInfoParameters) DeepCopy() *ClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ClusterSource != nil {
		in, out := &in.ClusterSource, &out.ClusterSource
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DefaultTags != nil {
		in, out := &in.DefaultTags, &out.DefaultTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.IsPinned != nil {
		in, out := &in.IsPinned, &out.IsPinned
		*out = new(bool)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.IsPinned != nil {
		in, out := &in.IsPinned, &out.IsPinned
		*out = new(bool)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranInitParameters) DeepCopyInto(out *CranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranInitParameters.
func (in *CranInitParameters) DeepCopy() *CranInitParameters {
	if in == nil {
		return nil
	}
	out := new(CranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranObservation) DeepCopyInto(out *CranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranObservation.
func (in *CranObservation) DeepCopy() *CranObservation {
	if in == nil {
		return nil
	}
	out := new(CranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranParameters) DeepCopyInto(out *CranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranParameters.
func (in *CranParameters) DeepCopy() *CranParameters {
	if in == nil {
		return nil
	}
	out := new(CranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsInitParameters) DeepCopyInto(out *DbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsInitParameters.
func (in *DbfsInitParameters) DeepCopy() *DbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsObservation) DeepCopyInto(out *DbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsObservation.
func (in *DbfsObservation) DeepCopy() *DbfsObservation {
	if in == nil {
		return nil
	}
	out := new(DbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsParameters) DeepCopyInto(out *DbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsParameters.
func (in *DbfsParameters) DeepCopy() *DbfsParameters {
	if in == nil {
		return nil
	}
	out := new(DbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageInitParameters) DeepCopyInto(out *DockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageInitParameters.
func (in *DockerImageInitParameters) DeepCopy() *DockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageObservation) DeepCopyInto(out *DockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageObservation.
func (in *DockerImageObservation) DeepCopy() *DockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(DockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageParameters) DeepCopyInto(out *DockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageParameters.
func (in *DockerImageParameters) DeepCopy() *DockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileInitParameters) DeepCopyInto(out *FileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileInitParameters.
func (in *FileInitParameters) DeepCopy() *FileInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileObservation) DeepCopyInto(out *FileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileObservation.
func (in *FileObservation) DeepCopy() *FileObservation {
	if in == nil {
		return nil
	}
	out := new(FileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileParameters) DeepCopyInto(out *FileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileParameters.
func (in *FileParameters) DeepCopy() *FileParameters {
	if in == nil {
		return nil
	}
	out := new(FileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesInitParameters) DeepCopyInto(out *GCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesInitParameters.
func (in *GCPAttributesInitParameters) DeepCopy() *GCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesObservation) DeepCopyInto(out *GCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesObservation.
func (in *GCPAttributesObservation) DeepCopy() *GCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesParameters) DeepCopyInto(out *GCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesParameters.
func (in *GCPAttributesParameters) DeepCopy() *GCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsInitParameters) DeepCopyInto(out *GcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsInitParameters.
func (in *GcsInitParameters) DeepCopy() *GcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsObservation) DeepCopyInto(out *GcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsObservation.
func (in *GcsObservation) DeepCopy() *GcsObservation {
	if in == nil {
		return nil
	}
	out := new(GcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsParameters) DeepCopyInto(out *GcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsParameters.
func (in *GcsParameters) DeepCopy() *GcsParameters {
	if in == nil {
		return nil
	}
	out := new(GcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsInitParameters) DeepCopyInto(out *InitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsInitParameters.
func (in *InitScriptsDbfsInitParameters) DeepCopy() *InitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsObservation) DeepCopyInto(out *InitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsObservation.
func (in *InitScriptsDbfsObservation) DeepCopy() *InitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsParameters) DeepCopyInto(out *InitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsParameters.
func (in *InitScriptsDbfsParameters) DeepCopy() *InitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsInitParameters) DeepCopyInto(out *InitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsInitParameters.
func (in *InitScriptsInitParameters) DeepCopy() *InitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsObservation) DeepCopyInto(out *InitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsObservation.
func (in *InitScriptsObservation) DeepCopy() *InitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsParameters) DeepCopyInto(out *InitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsParameters.
func (in *InitScriptsParameters) DeepCopy() *InitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3InitParameters) DeepCopyInto(out *InitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3InitParameters.
func (in *InitScriptsS3InitParameters) DeepCopy() *InitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3Observation) DeepCopyInto(out *InitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3Observation.
func (in *InitScriptsS3Observation) DeepCopy() *InitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3Parameters) DeepCopyInto(out *InitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3Parameters.
func (in *InitScriptsS3Parameters) DeepCopy() *InitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryInitParameters) DeepCopyInto(out *LibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryInitParameters.
func (in *LibraryInitParameters) DeepCopy() *LibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryObservation) DeepCopyInto(out *LibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryObservation.
func (in *LibraryObservation) DeepCopy() *LibraryObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryParameters) DeepCopyInto(out *LibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryParameters.
func (in *LibraryParameters) DeepCopy() *LibraryParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsInfoInitParameters) DeepCopyInto(out *LogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsInfoInitParameters.
func (in *LogAnalyticsInfoInitParameters) DeepCopy() *LogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsInfoObservation) DeepCopyInto(out *LogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsInfoObservation.
func (in *LogAnalyticsInfoObservation) DeepCopy() *LogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsInfoParameters) DeepCopyInto(out *LogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsInfoParameters.
func (in *LogAnalyticsInfoParameters) DeepCopy() *LogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenInitParameters) DeepCopyInto(out *MavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenInitParameters.
func (in *MavenInitParameters) DeepCopy() *MavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(MavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenObservation) DeepCopyInto(out *MavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenObservation.
func (in *MavenObservation) DeepCopy() *MavenObservation {
	if in == nil {
		return nil
	}
	out := new(MavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenParameters) DeepCopyInto(out *MavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenParameters.
func (in *MavenParameters) DeepCopy() *MavenParameters {
	if in == nil {
		return nil
	}
	out := new(MavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoInitParameters) DeepCopyInto(out *NetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoInitParameters.
func (in *NetworkFilesystemInfoInitParameters) DeepCopy() *NetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoObservation) DeepCopyInto(out *NetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoObservation.
func (in *NetworkFilesystemInfoObservation) DeepCopy() *NetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoParameters) DeepCopyInto(out *NetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoParameters.
func (in *NetworkFilesystemInfoParameters) DeepCopy() *NetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiInitParameters) DeepCopyInto(out *PypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiInitParameters.
func (in *PypiInitParameters) DeepCopy() *PypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(PypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiObservation) DeepCopyInto(out *PypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiObservation.
func (in *PypiObservation) DeepCopy() *PypiObservation {
	if in == nil {
		return nil
	}
	out := new(PypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiParameters) DeepCopyInto(out *PypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiParameters.
func (in *PypiParameters) DeepCopy() *PypiParameters {
	if in == nil {
		return nil
	}
	out := new(PypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3InitParameters) DeepCopyInto(out *S3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3InitParameters.
func (in *S3InitParameters) DeepCopy() *S3InitParameters {
	if in == nil {
		return nil
	}
	out := new(S3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Observation) DeepCopyInto(out *S3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Observation.
func (in *S3Observation) DeepCopy() *S3Observation {
	if in == nil {
		return nil
	}
	out := new(S3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Parameters) DeepCopyInto(out *S3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Parameters.
func (in *S3Parameters) DeepCopy() *S3Parameters {
	if in == nil {
		return nil
	}
	out := new(S3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesInitParameters) DeepCopyInto(out *VolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesInitParameters.
func (in *VolumesInitParameters) DeepCopy() *VolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesObservation) DeepCopyInto(out *VolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesObservation.
func (in *VolumesObservation) DeepCopy() *VolumesObservation {
	if in == nil {
		return nil
	}
	out := new(VolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesParameters) DeepCopyInto(out *VolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesParameters.
func (in *VolumesParameters) DeepCopy() *VolumesParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeInitParameters) DeepCopyInto(out *WorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeInitParameters.
func (in *WorkloadTypeInitParameters) DeepCopy() *WorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeObservation) DeepCopyInto(out *WorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeObservation.
func (in *WorkloadTypeObservation) DeepCopy() *WorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeParameters) DeepCopyInto(out *WorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeParameters.
func (in *WorkloadTypeParameters) DeepCopy() *WorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceInitParameters) DeepCopyInto(out *WorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceInitParameters.
func (in *WorkspaceInitParameters) DeepCopy() *WorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation) DeepCopyInto(out *WorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation.
func (in *WorkspaceObservation) DeepCopy() *WorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters) DeepCopyInto(out *WorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters.
func (in *WorkspaceParameters) DeepCopy() *WorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssInitParameters) DeepCopyInto(out *AbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssInitParameters.
func (in *AbfssInitParameters) DeepCopy() *AbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(AbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssObservation) DeepCopyInto(out *AbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssObservation.
func (in *AbfssObservation) DeepCopy() *AbfssObservation {
	if in == nil {
		return nil
	}
	out := new(AbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssParameters) DeepCopyInto(out *AbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssParameters.
func (in *AbfssParameters) DeepCopy() *AbfssParameters {
	if in == nil {
		return nil
	}
	out := new(AbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertInitParameters) DeepCopyInto(out *AlertInitParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertInitParameters.
func (in *AlertInitParameters) DeepCopy() *AlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertObservation) DeepCopyInto(out *AlertObservation) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertObservation.
func (in *AlertObservation) DeepCopy() *AlertObservation {
	if in == nil {
		return nil
	}
	out := new(AlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertParameters) DeepCopyInto(out *AlertParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertParameters.
func (in *AlertParameters) DeepCopy() *AlertParameters {
	if in == nil {
		return nil
	}
	out := new(AlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertSubscriptionsInitParameters) DeepCopyInto(out *AlertSubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertSubscriptionsInitParameters.
func (in *AlertSubscriptionsInitParameters) DeepCopy() *AlertSubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertSubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertSubscriptionsObservation) DeepCopyInto(out *AlertSubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertSubscriptionsObservation.
func (in *AlertSubscriptionsObservation) DeepCopy() *AlertSubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(AlertSubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertSubscriptionsParameters) DeepCopyInto(out *AlertSubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertSubscriptionsParameters.
func (in *AlertSubscriptionsParameters) DeepCopy() *AlertSubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(AlertSubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleInitParameters) DeepCopyInto(out *AutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleInitParameters.
func (in *AutoscaleInitParameters) DeepCopy() *AutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleObservation) DeepCopyInto(out *AutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleObservation.
func (in *AutoscaleObservation) DeepCopy() *AutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleParameters) DeepCopyInto(out *AutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleParameters.
func (in *AutoscaleParameters) DeepCopy() *AutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesInitParameters) DeepCopyInto(out *AwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesInitParameters.
func (in *AwsAttributesInitParameters) DeepCopy() *AwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesObservation) DeepCopyInto(out *AwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesObservation.
func (in *AwsAttributesObservation) DeepCopy() *AwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesParameters) DeepCopyInto(out *AwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesParameters.
func (in *AwsAttributesParameters) DeepCopy() *AwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesInitParameters) DeepCopyInto(out *AzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesInitParameters.
func (in *AzureAttributesInitParameters) DeepCopy() *AzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesObservation) DeepCopyInto(out *AzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesObservation.
func (in *AzureAttributesObservation) DeepCopy() *AzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesParameters) DeepCopyInto(out *AzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesParameters.
func (in *AzureAttributesParameters) DeepCopy() *AzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthInitParameters) DeepCopyInto(out *BasicAuthInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthInitParameters.
func (in *BasicAuthInitParameters) DeepCopy() *BasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthObservation) DeepCopyInto(out *BasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthObservation.
func (in *BasicAuthObservation) DeepCopy() *BasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(BasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthParameters) DeepCopyInto(out *BasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthParameters.
func (in *BasicAuthParameters) DeepCopy() *BasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsInitParameters) DeepCopyInto(out *ClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsInitParameters.
func (in *ClientsInitParameters) DeepCopy() *ClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsObservation) DeepCopyInto(out *ClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsObservation.
func (in *ClientsObservation) DeepCopy() *ClientsObservation {
	if in == nil {
		return nil
	}
	out := new(ClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsParameters) DeepCopyInto(out *ClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsParameters.
func (in *ClientsParameters) DeepCopy() *ClientsParameters {
	if in == nil {
		return nil
	}
	out := new(ClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfDbfsInitParameters) DeepCopyInto(out *ClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfDbfsInitParameters.
func (in *ClusterLogConfDbfsInitParameters) DeepCopy() *ClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfDbfsObservation) DeepCopyInto(out *ClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfDbfsObservation.
func (in *ClusterLogConfDbfsObservation) DeepCopy() *ClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfDbfsParameters) DeepCopyInto(out *ClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfDbfsParameters.
func (in *ClusterLogConfDbfsParameters) DeepCopy() *ClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfInitParameters) DeepCopyInto(out *ClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfInitParameters.
func (in *ClusterLogConfInitParameters) DeepCopy() *ClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfObservation) DeepCopyInto(out *ClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfObservation.
func (in *ClusterLogConfObservation) DeepCopy() *ClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfParameters) DeepCopyInto(out *ClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfParameters.
func (in *ClusterLogConfParameters) DeepCopy() *ClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfS3InitParameters) DeepCopyInto(out *ClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfS3InitParameters.
func (in *ClusterLogConfS3InitParameters) DeepCopy() *ClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfS3Observation) DeepCopyInto(out *ClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfS3Observation.
func (in *ClusterLogConfS3Observation) DeepCopy() *ClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfS3Parameters) DeepCopyInto(out *ClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfS3Parameters.
func (in *ClusterLogConfS3Parameters) DeepCopy() *ClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoInitParameters) DeepCopyInto(out *ClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoInitParameters.
func (in *ClusterMountInfoInitParameters) DeepCopy() *ClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopyInto(out *ClusterMountInfoNetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoNetworkFilesystemInfoInitParameters.
func (in *ClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopy() *ClusterMountInfoNetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoNetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoNetworkFilesystemInfoObservation) DeepCopyInto(out *ClusterMountInfoNetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoNetworkFilesystemInfoObservation.
func (in *ClusterMountInfoNetworkFilesystemInfoObservation) DeepCopy() *ClusterMountInfoNetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoNetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoNetworkFilesystemInfoParameters) DeepCopyInto(out *ClusterMountInfoNetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoNetworkFilesystemInfoParameters.
func (in *ClusterMountInfoNetworkFilesystemInfoParameters) DeepCopy() *ClusterMountInfoNetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoNetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoObservation) DeepCopyInto(out *ClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoObservation.
func (in *ClusterMountInfoObservation) DeepCopy() *ClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoParameters) DeepCopyInto(out *ClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoParameters.
func (in *ClusterMountInfoParameters) DeepCopy() *ClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeInitParameters) DeepCopyInto(out *ComputeInitParameters) {
	*out = *in
	if in.ComputeKey != nil {
		in, out := &in.ComputeKey, &out.ComputeKey
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeInitParameters.
func (in *ComputeInitParameters) DeepCopy() *ComputeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeObservation) DeepCopyInto(out *ComputeObservation) {
	*out = *in
	if in.ComputeKey != nil {
		in, out := &in.ComputeKey, &out.ComputeKey
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeObservation.
func (in *ComputeObservation) DeepCopy() *ComputeObservation {
	if in == nil {
		return nil
	}
	out := new(ComputeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeParameters) DeepCopyInto(out *ComputeParameters) {
	*out = *in
	if in.ComputeKey != nil {
		in, out := &in.ComputeKey, &out.ComputeKey
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeParameters.
func (in *ComputeParameters) DeepCopy() *ComputeParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionTaskInitParameters) DeepCopyInto(out *ConditionTaskInitParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionTaskInitParameters.
func (in *ConditionTaskInitParameters) DeepCopy() *ConditionTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionTaskObservation) DeepCopyInto(out *ConditionTaskObservation) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionTaskObservation.
func (in *ConditionTaskObservation) DeepCopy() *ConditionTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionTaskParameters) DeepCopyInto(out *ConditionTaskParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionTaskParameters.
func (in *ConditionTaskParameters) DeepCopy() *ConditionTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousInitParameters) DeepCopyInto(out *ContinuousInitParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousInitParameters.
func (in *ContinuousInitParameters) DeepCopy() *ContinuousInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContinuousInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousObservation) DeepCopyInto(out *ContinuousObservation) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousObservation.
func (in *ContinuousObservation) DeepCopy() *ContinuousObservation {
	if in == nil {
		return nil
	}
	out := new(ContinuousObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousParameters) DeepCopyInto(out *ContinuousParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousParameters.
func (in *ContinuousParameters) DeepCopy() *ContinuousParameters {
	if in == nil {
		return nil
	}
	out := new(ContinuousParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranInitParameters) DeepCopyInto(out *CranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranInitParameters.
func (in *CranInitParameters) DeepCopy() *CranInitParameters {
	if in == nil {
		return nil
	}
	out := new(CranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranObservation) DeepCopyInto(out *CranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranObservation.
func (in *CranObservation) DeepCopy() *CranObservation {
	if in == nil {
		return nil
	}
	out := new(CranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranParameters) DeepCopyInto(out *CranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranParameters.
func (in *CranParameters) DeepCopy() *CranParameters {
	if in == nil {
		return nil
	}
	out := new(CranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardInitParameters) DeepCopyInto(out *DashboardInitParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]DashboardSubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardInitParameters.
func (in *DashboardInitParameters) DeepCopy() *DashboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardObservation) DeepCopyInto(out *DashboardObservation) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]DashboardSubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardObservation.
func (in *DashboardObservation) DeepCopy() *DashboardObservation {
	if in == nil {
		return nil
	}
	out := new(DashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardParameters) DeepCopyInto(out *DashboardParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]DashboardSubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardParameters.
func (in *DashboardParameters) DeepCopy() *DashboardParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSubscriptionsInitParameters) DeepCopyInto(out *DashboardSubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSubscriptionsInitParameters.
func (in *DashboardSubscriptionsInitParameters) DeepCopy() *DashboardSubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardSubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSubscriptionsObservation) DeepCopyInto(out *DashboardSubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSubscriptionsObservation.
func (in *DashboardSubscriptionsObservation) DeepCopy() *DashboardSubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DashboardSubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSubscriptionsParameters) DeepCopyInto(out *DashboardSubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSubscriptionsParameters.
func (in *DashboardSubscriptionsParameters) DeepCopy() *DashboardSubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardSubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsInitParameters) DeepCopyInto(out *DbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsInitParameters.
func (in *DbfsInitParameters) DeepCopy() *DbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsObservation) DeepCopyInto(out *DbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsObservation.
func (in *DbfsObservation) DeepCopy() *DbfsObservation {
	if in == nil {
		return nil
	}
	out := new(DbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsParameters) DeepCopyInto(out *DbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsParameters.
func (in *DbfsParameters) DeepCopy() *DbfsParameters {
	if in == nil {
		return nil
	}
	out := new(DbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbtTaskInitParameters) DeepCopyInto(out *DbtTaskInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbtTaskInitParameters.
func (in *DbtTaskInitParameters) DeepCopy() *DbtTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(DbtTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbtTaskObservation) DeepCopyInto(out *DbtTaskObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbtTaskObservation.
func (in *DbtTaskObservation) DeepCopy() *DbtTaskObservation {
	if in == nil {
		return nil
	}
	out := new(DbtTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbtTaskParameters) DeepCopyInto(out *DbtTaskParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbtTaskParameters.
func (in *DbtTaskParameters) DeepCopy() *DbtTaskParameters {
	if in == nil {
		return nil
	}
	out := new(DbtTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependsOnInitParameters) DeepCopyInto(out *DependsOnInitParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependsOnInitParameters.
func (in *DependsOnInitParameters) DeepCopy() *DependsOnInitParameters {
	if in == nil {
		return nil
	}
	out := new(DependsOnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependsOnObservation) DeepCopyInto(out *DependsOnObservation) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependsOnObservation.
func (in *DependsOnObservation) DeepCopy() *DependsOnObservation {
	if in == nil {
		return nil
	}
	out := new(DependsOnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependsOnParameters) DeepCopyInto(out *DependsOnParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependsOnParameters.
func (in *DependsOnParameters) DeepCopy() *DependsOnParameters {
	if in == nil {
		return nil
	}
	out := new(DependsOnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentInitParameters) DeepCopyInto(out *DeploymentInitParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentInitParameters.
func (in *DeploymentInitParameters) DeepCopy() *DeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentObservation) DeepCopyInto(out *DeploymentObservation) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentObservation.
func (in *DeploymentObservation) DeepCopy() *DeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(DeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentParameters) DeepCopyInto(out *DeploymentParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentParameters.
func (in *DeploymentParameters) DeepCopy() *DeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageBasicAuthInitParameters) DeepCopyInto(out *DockerImageBasicAuthInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageBasicAuthInitParameters.
func (in *DockerImageBasicAuthInitParameters) DeepCopy() *DockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageBasicAuthObservation) DeepCopyInto(out *DockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageBasicAuthObservation.
func (in *DockerImageBasicAuthObservation) DeepCopy() *DockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(DockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageBasicAuthParameters) DeepCopyInto(out *DockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageBasicAuthParameters.
func (in *DockerImageBasicAuthParameters) DeepCopy() *DockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageInitParameters) DeepCopyInto(out *DockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageInitParameters.
func (in *DockerImageInitParameters) DeepCopy() *DockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageObservation) DeepCopyInto(out *DockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageObservation.
func (in *DockerImageObservation) DeepCopy() *DockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(DockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageParameters) DeepCopyInto(out *DockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageParameters.
func (in *DockerImageParameters) DeepCopy() *DockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailNotificationsInitParameters) DeepCopyInto(out *EmailNotificationsInitParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailNotificationsInitParameters.
func (in *EmailNotificationsInitParameters) DeepCopy() *EmailNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmailNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailNotificationsObservation) DeepCopyInto(out *EmailNotificationsObservation) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailNotificationsObservation.
func (in *EmailNotificationsObservation) DeepCopy() *EmailNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(EmailNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailNotificationsParameters) DeepCopyInto(out *EmailNotificationsParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailNotificationsParameters.
func (in *EmailNotificationsParameters) DeepCopy() *EmailNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(EmailNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileArrivalInitParameters) DeepCopyInto(out *FileArrivalInitParameters) {
	*out = *in
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileArrivalInitParameters.
func (in *FileArrivalInitParameters) DeepCopy() *FileArrivalInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileArrivalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileArrivalObservation) DeepCopyInto(out *FileArrivalObservation) {
	*out = *in
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileArrivalObservation.
func (in *FileArrivalObservation) DeepCopy() *FileArrivalObservation {
	if in == nil {
		return nil
	}
	out := new(FileArrivalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileArrivalParameters) DeepCopyInto(out *FileArrivalParameters) {
	*out = *in
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileArrivalParameters.
func (in *FileArrivalParameters) DeepCopy() *FileArrivalParameters {
	if in == nil {
		return nil
	}
	out := new(FileArrivalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileInitParameters) DeepCopyInto(out *FileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileInitParameters.
func (in *FileInitParameters) DeepCopy() *FileInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileObservation) DeepCopyInto(out *FileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileObservation.
func (in *FileObservation) DeepCopy() *FileObservation {
	if in == nil {
		return nil
	}
	out := new(FileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileParameters) DeepCopyInto(out *FileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileParameters.
func (in *FileParameters) DeepCopy() *FileParameters {
	if in == nil {
		return nil
	}
	out := new(FileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskInitParameters) DeepCopyInto(out *ForEachTaskInitParameters) {
	*out = *in
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]ForEachTaskTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskInitParameters.
func (in *ForEachTaskInitParameters) DeepCopy() *ForEachTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskObservation) DeepCopyInto(out *ForEachTaskObservation) {
	*out = *in
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]ForEachTaskTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskObservation.
func (in *ForEachTaskObservation) DeepCopy() *ForEachTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskParameters) DeepCopyInto(out *ForEachTaskParameters) {
	*out = *in
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]ForEachTaskTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskParameters.
func (in *ForEachTaskParameters) DeepCopy() *ForEachTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskDbtTaskInitParameters) DeepCopyInto(out *ForEachTaskTaskDbtTaskInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskDbtTaskInitParameters.
func (in *ForEachTaskTaskDbtTaskInitParameters) DeepCopy() *ForEachTaskTaskDbtTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskDbtTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskDbtTaskObservation) DeepCopyInto(out *ForEachTaskTaskDbtTaskObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskDbtTaskObservation.
func (in *ForEachTaskTaskDbtTaskObservation) DeepCopy() *ForEachTaskTaskDbtTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskDbtTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskDbtTaskParameters) DeepCopyInto(out *ForEachTaskTaskDbtTaskParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskDbtTaskParameters.
func (in *ForEachTaskTaskDbtTaskParameters) DeepCopy() *ForEachTaskTaskDbtTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskDbtTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskEmailNotificationsInitParameters) DeepCopyInto(out *ForEachTaskTaskEmailNotificationsInitParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskEmailNotificationsInitParameters.
func (in *ForEachTaskTaskEmailNotificationsInitParameters) DeepCopy() *ForEachTaskTaskEmailNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskEmailNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskEmailNotificationsObservation) DeepCopyInto(out *ForEachTaskTaskEmailNotificationsObservation) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskEmailNotificationsObservation.
func (in *ForEachTaskTaskEmailNotificationsObservation) DeepCopy() *ForEachTaskTaskEmailNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskEmailNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskEmailNotificationsParameters) DeepCopyInto(out *ForEachTaskTaskEmailNotificationsParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskEmailNotificationsParameters.
func (in *ForEachTaskTaskEmailNotificationsParameters) DeepCopy() *ForEachTaskTaskEmailNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskEmailNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskInitParameters) DeepCopyInto(out *ForEachTaskTaskInitParameters) {
	*out = *in
	if in.ComputeKey != nil {
		in, out := &in.ComputeKey, &out.ComputeKey
		*out = new(string)
		**out = **in
	}
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]TaskConditionTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]ForEachTaskTaskDbtTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]TaskDependsOnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]ForEachTaskTaskEmailNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]TaskHealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]TaskNewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]TaskNotebookTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]TaskNotificationSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]TaskPipelineTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]TaskPythonWheelTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]TaskRunJobTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]SQLTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]TaskSparkJarTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]TaskSparkPythonTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]TaskSparkSubmitTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]WebhookNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskInitParameters.
func (in *ForEachTaskTaskInitParameters) DeepCopy() *ForEachTaskTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskObservation) DeepCopyInto(out *ForEachTaskTaskObservation) {
	*out = *in
	if in.ComputeKey != nil {
		in, out := &in.ComputeKey, &out.ComputeKey
		*out = new(string)
		**out = **in
	}
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]TaskConditionTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]ForEachTaskTaskDbtTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]TaskDependsOnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]ForEachTaskTaskEmailNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]TaskHealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]TaskNewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]TaskNotebookTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]TaskNotificationSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]TaskPipelineTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]TaskPythonWheelTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]TaskRunJobTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]SQLTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]TaskSparkJarTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]TaskSparkPythonTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]TaskSparkSubmitTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]WebhookNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskObservation.
func (in *ForEachTaskTaskObservation) DeepCopy() *ForEachTaskTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskParameters) DeepCopyInto(out *ForEachTaskTaskParameters) {
	*out = *in
	if in.ComputeKey != nil {
		in, out := &in.ComputeKey, &out.ComputeKey
		*out = new(string)
		**out = **in
	}
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]TaskConditionTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]ForEachTaskTaskDbtTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]TaskDependsOnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]ForEachTaskTaskEmailNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]TaskHealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]TaskNewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]TaskNotebookTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]TaskNotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]TaskPipelineTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]TaskPythonWheelTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]TaskRunJobTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]SQLTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]TaskSparkJarTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]TaskSparkPythonTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]TaskSparkSubmitTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]WebhookNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskParameters.
func (in *ForEachTaskTaskParameters) DeepCopy() *ForEachTaskTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesInitParameters) DeepCopyInto(out *GCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesInitParameters.
func (in *GCPAttributesInitParameters) DeepCopy() *GCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesObservation) DeepCopyInto(out *GCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesObservation.
func (in *GCPAttributesObservation) DeepCopy() *GCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesParameters) DeepCopyInto(out *GCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesParameters.
func (in *GCPAttributesParameters) DeepCopy() *GCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsInitParameters) DeepCopyInto(out *GcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsInitParameters.
func (in *GcsInitParameters) DeepCopy() *GcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsObservation) DeepCopyInto(out *GcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsObservation.
func (in *GcsObservation) DeepCopy() *GcsObservation {
	if in == nil {
		return nil
	}
	out := new(GcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsParameters) DeepCopyInto(out *GcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsParameters.
func (in *GcsParameters) DeepCopy() *GcsParameters {
	if in == nil {
		return nil
	}
	out := new(GcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSourceInitParameters) DeepCopyInto(out *GitSourceInitParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.JobSource != nil {
		in, out := &in.JobSource, &out.JobSource
		*out = make([]JobSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSourceInitParameters.
func (in *GitSourceInitParameters) DeepCopy() *GitSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(GitSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSourceObservation) DeepCopyInto(out *GitSourceObservation) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.JobSource != nil {
		in, out := &in.JobSource, &out.JobSource
		*out = make([]JobSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSourceObservation.
func (in *GitSourceObservation) DeepCopy() *GitSourceObservation {
	if in == nil {
		return nil
	}
	out := new(GitSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSourceParameters) DeepCopyInto(out *GitSourceParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.JobSource != nil {
		in, out := &in.JobSource, &out.JobSource
		*out = make([]JobSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSourceParameters.
func (in *GitSourceParameters) DeepCopy() *GitSourceParameters {
	if in == nil {
		return nil
	}
	out := new(GitSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthInitParameters) DeepCopyInto(out *HealthInitParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthInitParameters.
func (in *HealthInitParameters) DeepCopy() *HealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthObservation) DeepCopyInto(out *HealthObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthObservation.
func (in *HealthObservation) DeepCopy() *HealthObservation {
	if in == nil {
		return nil
	}
	out := new(HealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthParameters) DeepCopyInto(out *HealthParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthParameters.
func (in *HealthParameters) DeepCopy() *HealthParameters {
	if in == nil {
		return nil
	}
	out := new(HealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthRulesInitParameters) DeepCopyInto(out *HealthRulesInitParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthRulesInitParameters.
func (in *HealthRulesInitParameters) DeepCopy() *HealthRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthRulesObservation) DeepCopyInto(out *HealthRulesObservation) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthRulesObservation.
func (in *HealthRulesObservation) DeepCopy() *HealthRulesObservation {
	if in == nil {
		return nil
	}
	out := new(HealthRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthRulesParameters) DeepCopyInto(out *HealthRulesParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthRulesParameters.
func (in *HealthRulesParameters) DeepCopy() *HealthRulesParameters {
	if in == nil {
		return nil
	}
	out := new(HealthRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsAbfssInitParameters) DeepCopyInto(out *InitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsAbfssInitParameters.
func (in *InitScriptsAbfssInitParameters) DeepCopy() *InitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsAbfssObservation) DeepCopyInto(out *InitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsAbfssObservation.
func (in *InitScriptsAbfssObservation) DeepCopy() *InitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsAbfssParameters) DeepCopyInto(out *InitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsAbfssParameters.
func (in *InitScriptsAbfssParameters) DeepCopy() *InitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsInitParameters) DeepCopyInto(out *InitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsInitParameters.
func (in *InitScriptsDbfsInitParameters) DeepCopy() *InitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsObservation) DeepCopyInto(out *InitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsObservation.
func (in *InitScriptsDbfsObservation) DeepCopy() *InitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsParameters) DeepCopyInto(out *InitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsParameters.
func (in *InitScriptsDbfsParameters) DeepCopy() *InitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsFileInitParameters) DeepCopyInto(out *InitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsFileInitParameters.
func (in *InitScriptsFileInitParameters) DeepCopy() *InitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsFileObservation) DeepCopyInto(out *InitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsFileObservation.
func (in *InitScriptsFileObservation) DeepCopy() *InitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsFileParameters) DeepCopyInto(out *InitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsFileParameters.
func (in *InitScriptsFileParameters) DeepCopy() *InitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsGcsInitParameters) DeepCopyInto(out *InitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsGcsInitParameters.
func (in *InitScriptsGcsInitParameters) DeepCopy() *InitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsGcsObservation) DeepCopyInto(out *InitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsGcsObservation.
func (in *InitScriptsGcsObservation) DeepCopy() *InitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsGcsParameters) DeepCopyInto(out *InitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsGcsParameters.
func (in *InitScriptsGcsParameters) DeepCopy() *InitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsInitParameters) DeepCopyInto(out *InitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsInitParameters.
func (in *InitScriptsInitParameters) DeepCopy() *InitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsObservation) DeepCopyInto(out *InitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsObservation.
func (in *InitScriptsObservation) DeepCopy() *InitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsParameters) DeepCopyInto(out *InitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsParameters.
func (in *InitScriptsParameters) DeepCopy() *InitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3InitParameters) DeepCopyInto(out *InitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3InitParameters.
func (in *InitScriptsS3InitParameters) DeepCopy() *InitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3Observation) DeepCopyInto(out *InitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3Observation.
func (in *InitScriptsS3Observation) DeepCopy() *InitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3Parameters) DeepCopyInto(out *InitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3Parameters.
func (in *InitScriptsS3Parameters) DeepCopy() *InitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsVolumesInitParameters) DeepCopyInto(out *InitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsVolumesInitParameters.
func (in *InitScriptsVolumesInitParameters) DeepCopy() *InitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsVolumesObservation) DeepCopyInto(out *InitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsVolumesObservation.
func (in *InitScriptsVolumesObservation) DeepCopy() *InitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsVolumesParameters) DeepCopyInto(out *InitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsVolumesParameters.
func (in *InitScriptsVolumesParameters) DeepCopy() *InitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsWorkspaceInitParameters) DeepCopyInto(out *InitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsWorkspaceInitParameters.
func (in *InitScriptsWorkspaceInitParameters) DeepCopy() *InitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsWorkspaceObservation) DeepCopyInto(out *InitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsWorkspaceObservation.
func (in *InitScriptsWorkspaceObservation) DeepCopy() *InitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsWorkspaceParameters) DeepCopyInto(out *InitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsWorkspaceParameters.
func (in *InitScriptsWorkspaceParameters) DeepCopy() *InitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Job) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobClusterInitParameters) DeepCopyInto(out *JobClusterInitParameters) {
	*out = *in
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]NewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobClusterInitParameters.
func (in *JobClusterInitParameters) DeepCopy() *JobClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobClusterObservation) DeepCopyInto(out *JobClusterObservation) {
	*out = *in
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]NewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobClusterObservation.
func (in *JobClusterObservation) DeepCopy() *JobClusterObservation {
	if in == nil {
		return nil
	}
	out := new(JobClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobClusterParameters) DeepCopyInto(out *JobClusterParameters) {
	*out = *in
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]NewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobClusterParameters.
func (in *JobClusterParameters) DeepCopy() *JobClusterParameters {
	if in == nil {
		return nil
	}
	out := new(JobClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobInitParameters) DeepCopyInto(out *JobInitParameters) {
	*out = *in
	if in.AlwaysRunning != nil {
		in, out := &in.AlwaysRunning, &out.AlwaysRunning
		*out = new(bool)
		**out = **in
	}
	if in.Compute != nil {
		in, out := &in.Compute, &out.Compute
		*out = make([]ComputeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ContinuousInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ControlRunState != nil {
		in, out := &in.ControlRunState, &out.ControlRunState
		*out = new(bool)
		**out = **in
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]DbtTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EditMode != nil {
		in, out := &in.EditMode, &out.EditMode
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]EmailNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.GitSource != nil {
		in, out := &in.GitSource, &out.GitSource
		*out = make([]GitSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobCluster != nil {
		in, out := &in.JobCluster, &out.JobCluster
		*out = make([]JobClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobNewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]NotebookTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]NotificationSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]ParameterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]PipelineTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]PythonWheelTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = make([]QueueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]RunAsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]RunJobTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]SparkJarTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]SparkPythonTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]SparkSubmitTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]JobWebhookNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobInitParameters.
func (in *JobInitParameters) DeepCopy() *JobInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobList) DeepCopyInto(out *JobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobList.
func (in *JobList) DeepCopy() *JobList {
	if in == nil {
		return nil
	}
	out := new(JobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitParameters) DeepCopyInto(out *JobNewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]NewClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]NewClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]NewClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]NewClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]NewClusterClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]NewClusterDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]NewClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]NewClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]NewClusterWorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitParameters.
func (in *JobNewClusterInitParameters) DeepCopy() *JobNewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterObservation) DeepCopyInto(out *JobNewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]NewClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]NewClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]NewClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]NewClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]NewClusterClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]NewClusterDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]NewClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]NewClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]NewClusterWorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterObservation.
func (in *JobNewClusterObservation) DeepCopy() *JobNewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterParameters) DeepCopyInto(out *JobNewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]NewClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]NewClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]NewClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]NewClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]NewClusterClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]NewClusterDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]NewClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]NewClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]NewClusterWorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterParameters.
func (in *JobNewClusterParameters) DeepCopy() *JobNewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobObservation) DeepCopyInto(out *JobObservation) {
	*out = *in
	if in.AlwaysRunning != nil {
		in, out := &in.AlwaysRunning, &out.AlwaysRunning
		*out = new(bool)
		**out = **in
	}
	if in.Compute != nil {
		in, out := &in.Compute, &out.Compute
		*out = make([]ComputeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ContinuousObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ControlRunState != nil {
		in, out := &in.ControlRunState, &out.ControlRunState
		*out = new(bool)
		**out = **in
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]DbtTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EditMode != nil {
		in, out := &in.EditMode, &out.EditMode
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]EmailNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.GitSource != nil {
		in, out := &in.GitSource, &out.GitSource
		*out = make([]GitSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.JobCluster != nil {
		in, out := &in.JobCluster, &out.JobCluster
		*out = make([]JobClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobNewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]NotebookTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]NotificationSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]ParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]PipelineTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]PythonWheelTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = make([]QueueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]RunAsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]RunJobTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]SparkJarTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]SparkPythonTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]SparkSubmitTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]JobWebhookNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobObservation.
func (in *JobObservation) DeepCopy() *JobObservation {
	if in == nil {
		return nil
	}
	out := new(JobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParameters) DeepCopyInto(out *JobParameters) {
	*out = *in
	if in.AlwaysRunning != nil {
		in, out := &in.AlwaysRunning, &out.AlwaysRunning
		*out = new(bool)
		**out = **in
	}
	if in.Compute != nil {
		in, out := &in.Compute, &out.Compute
		*out = make([]ComputeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ContinuousParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ControlRunState != nil {
		in, out := &in.ControlRunState, &out.ControlRunState
		*out = new(bool)
		**out = **in
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]DbtTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EditMode != nil {
		in, out := &in.EditMode, &out.EditMode
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]EmailNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.GitSource != nil {
		in, out := &in.GitSource, &out.GitSource
		*out = make([]GitSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobCluster != nil {
		in, out := &in.JobCluster, &out.JobCluster
		*out = make([]JobClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobNewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]NotebookTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]NotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]ParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]PipelineTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]PythonWheelTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = make([]QueueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]RunAsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]RunJobTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]SparkJarTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]SparkPythonTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]SparkSubmitTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]JobWebhookNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParameters.
func (in *JobParameters) DeepCopy() *JobParameters {
	if in == nil {
		return nil
	}
	out := new(JobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSourceInitParameters) DeepCopyInto(out *JobSourceInitParameters) {
	*out = *in
	if in.DirtyState != nil {
		in, out := &in.DirtyState, &out.DirtyState
		*out = new(string)
		**out = **in
	}
	if in.ImportFromGitBranch != nil {
		in, out := &in.ImportFromGitBranch, &out.ImportFromGitBranch
		*out = new(string)
		**out = **in
	}
	if in.JobConfigPath != nil {
		in, out := &in.JobConfigPath, &out.JobConfigPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSourceInitParameters.
func (in *JobSourceInitParameters) DeepCopy() *JobSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSourceObservation) DeepCopyInto(out *JobSourceObservation) {
	*out = *in
	if in.DirtyState != nil {
		in, out := &in.DirtyState, &out.DirtyState
		*out = new(string)
		**out = **in
	}
	if in.ImportFromGitBranch != nil {
		in, out := &in.ImportFromGitBranch, &out.ImportFromGitBranch
		*out = new(string)
		**out = **in
	}
	if in.JobConfigPath != nil {
		in, out := &in.JobConfigPath, &out.JobConfigPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSourceObservation.
func (in *JobSourceObservation) DeepCopy() *JobSourceObservation {
	if in == nil {
		return nil
	}
	out := new(JobSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSourceParameters) DeepCopyInto(out *JobSourceParameters) {
	*out = *in
	if in.DirtyState != nil {
		in, out := &in.DirtyState, &out.DirtyState
		*out = new(string)
		**out = **in
	}
	if in.ImportFromGitBranch != nil {
		in, out := &in.ImportFromGitBranch, &out.ImportFromGitBranch
		*out = new(string)
		**out = **in
	}
	if in.JobConfigPath != nil {
		in, out := &in.JobConfigPath, &out.JobConfigPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSourceParameters.
func (in *JobSourceParameters) DeepCopy() *JobSourceParameters {
	if in == nil {
		return nil
	}
	out := new(JobSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskHealthInitParameters) DeepCopyInto(out *JobTaskHealthInitParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]TaskHealthRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskHealthInitParameters.
func (in *JobTaskHealthInitParameters) DeepCopy() *JobTaskHealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskHealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskHealthObservation) DeepCopyInto(out *JobTaskHealthObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]TaskHealthRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskHealthObservation.
func (in *JobTaskHealthObservation) DeepCopy() *JobTaskHealthObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskHealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskHealthParameters) DeepCopyInto(out *JobTaskHealthParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]TaskHealthRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskHealthParameters.
func (in *JobTaskHealthParameters) DeepCopy() *JobTaskHealthParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskHealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryInitParameters) DeepCopyInto(out *JobTaskLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryInitParameters.
func (in *JobTaskLibraryInitParameters) DeepCopy() *JobTaskLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryObservation) DeepCopyInto(out *JobTaskLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryObservation.
func (in *JobTaskLibraryObservation) DeepCopy() *JobTaskLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryParameters) DeepCopyInto(out *JobTaskLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryParameters.
func (in *JobTaskLibraryParameters) DeepCopy() *JobTaskLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAutoscaleInitParameters) DeepCopyInto(out *JobTaskNewClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAutoscaleInitParameters.
func (in *JobTaskNewClusterAutoscaleInitParameters) DeepCopy() *JobTaskNewClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAutoscaleObservation) DeepCopyInto(out *JobTaskNewClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAutoscaleObservation.
func (in *JobTaskNewClusterAutoscaleObservation) DeepCopy() *JobTaskNewClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAutoscaleParameters) DeepCopyInto(out *JobTaskNewClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAutoscaleParameters.
func (in *JobTaskNewClusterAutoscaleParameters) DeepCopy() *JobTaskNewClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAwsAttributesInitParameters) DeepCopyInto(out *JobTaskNewClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAwsAttributesInitParameters.
func (in *JobTaskNewClusterAwsAttributesInitParameters) DeepCopy() *JobTaskNewClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAwsAttributesObservation) DeepCopyInto(out *JobTaskNewClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAwsAttributesObservation.
func (in *JobTaskNewClusterAwsAttributesObservation) DeepCopy() *JobTaskNewClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAwsAttributesParameters) DeepCopyInto(out *JobTaskNewClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAwsAttributesParameters.
func (in *JobTaskNewClusterAwsAttributesParameters) DeepCopy() *JobTaskNewClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesInitParameters) DeepCopyInto(out *JobTaskNewClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesInitParameters.
func (in *JobTaskNewClusterAzureAttributesInitParameters) DeepCopy() *JobTaskNewClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesObservation) DeepCopyInto(out *JobTaskNewClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesObservation.
func (in *JobTaskNewClusterAzureAttributesObservation) DeepCopy() *JobTaskNewClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesParameters) DeepCopyInto(out *JobTaskNewClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesParameters.
func (in *JobTaskNewClusterAzureAttributesParameters) DeepCopy() *JobTaskNewClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfInitParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfInitParameters.
func (in *JobTaskNewClusterClusterLogConfInitParameters) DeepCopy() *JobTaskNewClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfObservation) DeepCopyInto(out *JobTaskNewClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfObservation.
func (in *JobTaskNewClusterClusterLogConfObservation) DeepCopy() *JobTaskNewClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfParameters.
func (in *JobTaskNewClusterClusterLogConfParameters) DeepCopy() *JobTaskNewClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoInitParameters) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoInitParameters.
func (in *JobTaskNewClusterClusterMountInfoInitParameters) DeepCopy() *JobTaskNewClusterClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoObservation) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoObservation.
func (in *JobTaskNewClusterClusterMountInfoObservation) DeepCopy() *JobTaskNewClusterClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoParameters) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoParameters.
func (in *JobTaskNewClusterClusterMountInfoParameters) DeepCopy() *JobTaskNewClusterClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageInitParameters) DeepCopyInto(out *JobTaskNewClusterDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]TaskNewClusterDockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageInitParameters.
func (in *JobTaskNewClusterDockerImageInitParameters) DeepCopy() *JobTaskNewClusterDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageObservation) DeepCopyInto(out *JobTaskNewClusterDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]TaskNewClusterDockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageObservation.
func (in *JobTaskNewClusterDockerImageObservation) DeepCopy() *JobTaskNewClusterDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageParameters) DeepCopyInto(out *JobTaskNewClusterDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]TaskNewClusterDockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageParameters.
func (in *JobTaskNewClusterDockerImageParameters) DeepCopy() *JobTaskNewClusterDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterGCPAttributesInitParameters) DeepCopyInto(out *JobTaskNewClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterGCPAttributesInitParameters.
func (in *JobTaskNewClusterGCPAttributesInitParameters) DeepCopy() *JobTaskNewClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterGCPAttributesObservation) DeepCopyInto(out *JobTaskNewClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterGCPAttributesObservation.
func (in *JobTaskNewClusterGCPAttributesObservation) DeepCopy() *JobTaskNewClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterGCPAttributesParameters) DeepCopyInto(out *JobTaskNewClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterGCPAttributesParameters.
func (in *JobTaskNewClusterGCPAttributesParameters) DeepCopy() *JobTaskNewClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitParameters) DeepCopyInto(out *JobTaskNewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobTaskNewClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobTaskNewClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobTaskNewClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobTaskNewClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobTaskNewClusterClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobTaskNewClusterDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobTaskNewClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobTaskNewClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobTaskNewClusterWorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitParameters.
func (in *JobTaskNewClusterInitParameters) DeepCopy() *JobTaskNewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsDbfsInitParameters.
func (in *JobTaskNewClusterInitScriptsDbfsInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsDbfsObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsDbfsObservation.
func (in *JobTaskNewClusterInitScriptsDbfsObservation) DeepCopy() *JobTaskNewClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsDbfsParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsDbfsParameters.
func (in *JobTaskNewClusterInitScriptsDbfsParameters) DeepCopy() *JobTaskNewClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]TaskNewClusterInitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskNewClusterInitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]TaskNewClusterInitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TaskNewClusterInitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]TaskNewClusterInitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsInitParameters.
func (in *JobTaskNewClusterInitScriptsInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]TaskNewClusterInitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskNewClusterInitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]TaskNewClusterInitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TaskNewClusterInitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]TaskNewClusterInitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsObservation.
func (in *JobTaskNewClusterInitScriptsObservation) DeepCopy() *JobTaskNewClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]TaskNewClusterInitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskNewClusterInitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]TaskNewClusterInitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TaskNewClusterInitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]TaskNewClusterInitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsParameters.
func (in *JobTaskNewClusterInitScriptsParameters) DeepCopy() *JobTaskNewClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsS3InitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsS3InitParameters.
func (in *JobTaskNewClusterInitScriptsS3InitParameters) DeepCopy() *JobTaskNewClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsS3Observation) DeepCopyInto(out *JobTaskNewClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsS3Observation.
func (in *JobTaskNewClusterInitScriptsS3Observation) DeepCopy() *JobTaskNewClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsS3Parameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsS3Parameters.
func (in *JobTaskNewClusterInitScriptsS3Parameters) DeepCopy() *JobTaskNewClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterObservation) DeepCopyInto(out *JobTaskNewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobTaskNewClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobTaskNewClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobTaskNewClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobTaskNewClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobTaskNewClusterClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobTaskNewClusterDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobTaskNewClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobTaskNewClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobTaskNewClusterWorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterObservation.
func (in *JobTaskNewClusterObservation) DeepCopy() *JobTaskNewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterParameters) DeepCopyInto(out *JobTaskNewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobTaskNewClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobTaskNewClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobTaskNewClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobTaskNewClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobTaskNewClusterClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobTaskNewClusterDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobTaskNewClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobTaskNewClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobTaskNewClusterWorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterParameters.
func (in *JobTaskNewClusterParameters) DeepCopy() *JobTaskNewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeInitParameters) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]TaskNewClusterWorkloadTypeClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeInitParameters.
func (in *JobTaskNewClusterWorkloadTypeInitParameters) DeepCopy() *JobTaskNewClusterWorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeObservation) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]TaskNewClusterWorkloadTypeClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeObservation.
func (in *JobTaskNewClusterWorkloadTypeObservation) DeepCopy() *JobTaskNewClusterWorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeParameters) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]TaskNewClusterWorkloadTypeClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeParameters.
func (in *JobTaskNewClusterWorkloadTypeParameters) DeepCopy() *JobTaskNewClusterWorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotebookTaskInitParameters) DeepCopyInto(out *JobTaskNotebookTaskInitParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotebookTaskInitParameters.
func (in *JobTaskNotebookTaskInitParameters) DeepCopy() *JobTaskNotebookTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotebookTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotebookTaskObservation) DeepCopyInto(out *JobTaskNotebookTaskObservation) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotebookTaskObservation.
func (in *JobTaskNotebookTaskObservation) DeepCopy() *JobTaskNotebookTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotebookTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotebookTaskParameters) DeepCopyInto(out *JobTaskNotebookTaskParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotebookTaskParameters.
func (in *JobTaskNotebookTaskParameters) DeepCopy() *JobTaskNotebookTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotebookTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotificationSettingsInitParameters) DeepCopyInto(out *JobTaskNotificationSettingsInitParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotificationSettingsInitParameters.
func (in *JobTaskNotificationSettingsInitParameters) DeepCopy() *JobTaskNotificationSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotificationSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotificationSettingsObservation) DeepCopyInto(out *JobTaskNotificationSettingsObservation) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotificationSettingsObservation.
func (in *JobTaskNotificationSettingsObservation) DeepCopy() *JobTaskNotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotificationSettingsParameters) DeepCopyInto(out *JobTaskNotificationSettingsParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotificationSettingsParameters.
func (in *JobTaskNotificationSettingsParameters) DeepCopy() *JobTaskNotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPipelineTaskInitParameters) DeepCopyInto(out *JobTaskPipelineTaskInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPipelineTaskInitParameters.
func (in *JobTaskPipelineTaskInitParameters) DeepCopy() *JobTaskPipelineTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPipelineTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPipelineTaskObservation) DeepCopyInto(out *JobTaskPipelineTaskObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPipelineTaskObservation.
func (in *JobTaskPipelineTaskObservation) DeepCopy() *JobTaskPipelineTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskPipelineTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPipelineTaskParameters) DeepCopyInto(out *JobTaskPipelineTaskParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPipelineTaskParameters.
func (in *JobTaskPipelineTaskParameters) DeepCopy() *JobTaskPipelineTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPipelineTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPythonWheelTaskInitParameters) DeepCopyInto(out *JobTaskPythonWheelTaskInitParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPythonWheelTaskInitParameters.
func (in *JobTaskPythonWheelTaskInitParameters) DeepCopy() *JobTaskPythonWheelTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPythonWheelTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPythonWheelTaskObservation) DeepCopyInto(out *JobTaskPythonWheelTaskObservation) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPythonWheelTaskObservation.
func (in *JobTaskPythonWheelTaskObservation) DeepCopy() *JobTaskPythonWheelTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskPythonWheelTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPythonWheelTaskParameters) DeepCopyInto(out *JobTaskPythonWheelTaskParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPythonWheelTaskParameters.
func (in *JobTaskPythonWheelTaskParameters) DeepCopy() *JobTaskPythonWheelTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPythonWheelTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskRunJobTaskInitParameters) DeepCopyInto(out *JobTaskRunJobTaskInitParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskRunJobTaskInitParameters.
func (in *JobTaskRunJobTaskInitParameters) DeepCopy() *JobTaskRunJobTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskRunJobTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskRunJobTaskObservation) DeepCopyInto(out *JobTaskRunJobTaskObservation) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskRunJobTaskObservation.
func (in *JobTaskRunJobTaskObservation) DeepCopy() *JobTaskRunJobTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskRunJobTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskRunJobTaskParameters) DeepCopyInto(out *JobTaskRunJobTaskParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskRunJobTaskParameters.
func (in *JobTaskRunJobTaskParameters) DeepCopy() *JobTaskRunJobTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskRunJobTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkJarTaskInitParameters) DeepCopyInto(out *JobTaskSparkJarTaskInitParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkJarTaskInitParameters.
func (in *JobTaskSparkJarTaskInitParameters) DeepCopy() *JobTaskSparkJarTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkJarTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkJarTaskObservation) DeepCopyInto(out *JobTaskSparkJarTaskObservation) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkJarTaskObservation.
func (in *JobTaskSparkJarTaskObservation) DeepCopy() *JobTaskSparkJarTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkJarTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkJarTaskParameters) DeepCopyInto(out *JobTaskSparkJarTaskParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkJarTaskParameters.
func (in *JobTaskSparkJarTaskParameters) DeepCopy() *JobTaskSparkJarTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkJarTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkPythonTaskInitParameters) DeepCopyInto(out *JobTaskSparkPythonTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkPythonTaskInitParameters.
func (in *JobTaskSparkPythonTaskInitParameters) DeepCopy() *JobTaskSparkPythonTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkPythonTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkPythonTaskObservation) DeepCopyInto(out *JobTaskSparkPythonTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkPythonTaskObservation.
func (in *JobTaskSparkPythonTaskObservation) DeepCopy() *JobTaskSparkPythonTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkPythonTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkPythonTaskParameters) DeepCopyInto(out *JobTaskSparkPythonTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkPythonTaskParameters.
func (in *JobTaskSparkPythonTaskParameters) DeepCopy() *JobTaskSparkPythonTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkPythonTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkSubmitTaskInitParameters) DeepCopyInto(out *JobTaskSparkSubmitTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkSubmitTaskInitParameters.
func (in *JobTaskSparkSubmitTaskInitParameters) DeepCopy() *JobTaskSparkSubmitTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkSubmitTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkSubmitTaskObservation) DeepCopyInto(out *JobTaskSparkSubmitTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkSubmitTaskObservation.
func (in *JobTaskSparkSubmitTaskObservation) DeepCopy() *JobTaskSparkSubmitTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkSubmitTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkSubmitTaskParameters) DeepCopyInto(out *JobTaskSparkSubmitTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkSubmitTaskParameters.
func (in *JobTaskSparkSubmitTaskParameters) DeepCopy() *JobTaskSparkSubmitTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkSubmitTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsInitParameters) DeepCopyInto(out *JobWebhookNotificationsInitParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]JobWebhookNotificationsOnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]JobWebhookNotificationsOnStartInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]JobWebhookNotificationsOnSuccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsInitParameters.
func (in *JobWebhookNotificationsInitParameters) DeepCopy() *JobWebhookNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsObservation) DeepCopyInto(out *JobWebhookNotificationsObservation) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]JobWebhookNotificationsOnDurationWarningThresholdExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]JobWebhookNotificationsOnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]JobWebhookNotificationsOnStartObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]JobWebhookNotificationsOnSuccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsObservation.
func (in *JobWebhookNotificationsObservation) DeepCopy() *JobWebhookNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopy() *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopyInto(out *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnDurationWarningThresholdExceededObservation.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopy() *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnDurationWarningThresholdExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopyInto(out *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnDurationWarningThresholdExceededParameters.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopy() *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnDurationWarningThresholdExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnFailureInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnFailureInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnFailureInitParameters.
func (in *JobWebhookNotificationsOnFailureInitParameters) DeepCopy() *JobWebhookNotificationsOnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnFailureObservation) DeepCopyInto(out *JobWebhookNotificationsOnFailureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnFailureObservation.
func (in *JobWebhookNotificationsOnFailureObservation) DeepCopy() *JobWebhookNotificationsOnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnFailureParameters) DeepCopyInto(out *JobWebhookNotificationsOnFailureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnFailureParameters.
func (in *JobWebhookNotificationsOnFailureParameters) DeepCopy() *JobWebhookNotificationsOnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStartInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnStartInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStartInitParameters.
func (in *JobWebhookNotificationsOnStartInitParameters) DeepCopy() *JobWebhookNotificationsOnStartInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStartInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStartObservation) DeepCopyInto(out *JobWebhookNotificationsOnStartObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStartObservation.
func (in *JobWebhookNotificationsOnStartObservation) DeepCopy() *JobWebhookNotificationsOnStartObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStartObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStartParameters) DeepCopyInto(out *JobWebhookNotificationsOnStartParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStartParameters.
func (in *JobWebhookNotificationsOnStartParameters) DeepCopy() *JobWebhookNotificationsOnStartParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStartParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnSuccessInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnSuccessInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnSuccessInitParameters.
func (in *JobWebhookNotificationsOnSuccessInitParameters) DeepCopy() *JobWebhookNotificationsOnSuccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnSuccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnSuccessObservation) DeepCopyInto(out *JobWebhookNotificationsOnSuccessObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnSuccessObservation.
func (in *JobWebhookNotificationsOnSuccessObservation) DeepCopy() *JobWebhookNotificationsOnSuccessObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnSuccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnSuccessParameters) DeepCopyInto(out *JobWebhookNotificationsOnSuccessParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnSuccessParameters.
func (in *JobWebhookNotificationsOnSuccessParameters) DeepCopy() *JobWebhookNotificationsOnSuccessParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnSuccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsParameters) DeepCopyInto(out *JobWebhookNotificationsParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]JobWebhookNotificationsOnDurationWarningThresholdExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]JobWebhookNotificationsOnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]JobWebhookNotificationsOnStartParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]JobWebhookNotificationsOnSuccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsParameters.
func (in *JobWebhookNotificationsParameters) DeepCopy() *JobWebhookNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranInitParameters) DeepCopyInto(out *LibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranInitParameters.
func (in *LibraryCranInitParameters) DeepCopy() *LibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranObservation) DeepCopyInto(out *LibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranObservation.
func (in *LibraryCranObservation) DeepCopy() *LibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranParameters) DeepCopyInto(out *LibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranParameters.
func (in *LibraryCranParameters) DeepCopy() *LibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryInitParameters) DeepCopyInto(out *LibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryInitParameters.
func (in *LibraryInitParameters) DeepCopy() *LibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenInitParameters) DeepCopyInto(out *LibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenInitParameters.
func (in *LibraryMavenInitParameters) DeepCopy() *LibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenObservation) DeepCopyInto(out *LibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenObservation.
func (in *LibraryMavenObservation) DeepCopy() *LibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenParameters) DeepCopyInto(out *LibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenParameters.
func (in *LibraryMavenParameters) DeepCopy() *LibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryObservation) DeepCopyInto(out *LibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryObservation.
func (in *LibraryObservation) DeepCopy() *LibraryObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryParameters) DeepCopyInto(out *LibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryParameters.
func (in *LibraryParameters) DeepCopy() *LibraryParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiInitParameters) DeepCopyInto(out *LibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiInitParameters.
func (in *LibraryPypiInitParameters) DeepCopy() *LibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiObservation) DeepCopyInto(out *LibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiObservation.
func (in *LibraryPypiObservation) DeepCopy() *LibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiParameters) DeepCopyInto(out *LibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiParameters.
func (in *LibraryPypiParameters) DeepCopy() *LibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenInitParameters) DeepCopyInto(out *MavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenInitParameters.
func (in *MavenInitParameters) DeepCopy() *MavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(MavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenObservation) DeepCopyInto(out *MavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenObservation.
func (in *MavenObservation) DeepCopy() *MavenObservation {
	if in == nil {
		return nil
	}
	out := new(MavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenParameters) DeepCopyInto(out *MavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenParameters.
func (in *MavenParameters) DeepCopy() *MavenParameters {
	if in == nil {
		return nil
	}
	out := new(MavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoInitParameters) DeepCopyInto(out *NetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoInitParameters.
func (in *NetworkFilesystemInfoInitParameters) DeepCopy() *NetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoObservation) DeepCopyInto(out *NetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoObservation.
func (in *NetworkFilesystemInfoObservation) DeepCopy() *NetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoParameters) DeepCopyInto(out *NetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoParameters.
func (in *NetworkFilesystemInfoParameters) DeepCopy() *NetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAutoscaleInitParameters) DeepCopyInto(out *NewClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAutoscaleInitParameters.
func (in *NewClusterAutoscaleInitParameters) DeepCopy() *NewClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAutoscaleObservation) DeepCopyInto(out *NewClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAutoscaleObservation.
func (in *NewClusterAutoscaleObservation) DeepCopy() *NewClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAutoscaleParameters) DeepCopyInto(out *NewClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAutoscaleParameters.
func (in *NewClusterAutoscaleParameters) DeepCopy() *NewClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAwsAttributesInitParameters) DeepCopyInto(out *NewClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAwsAttributesInitParameters.
func (in *NewClusterAwsAttributesInitParameters) DeepCopy() *NewClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAwsAttributesObservation) DeepCopyInto(out *NewClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAwsAttributesObservation.
func (in *NewClusterAwsAttributesObservation) DeepCopy() *NewClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAwsAttributesParameters) DeepCopyInto(out *NewClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAwsAttributesParameters.
func (in *NewClusterAwsAttributesParameters) DeepCopy() *NewClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesInitParameters) DeepCopyInto(out *NewClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesInitParameters.
func (in *NewClusterAzureAttributesInitParameters) DeepCopy() *NewClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesObservation) DeepCopyInto(out *NewClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesObservation.
func (in *NewClusterAzureAttributesObservation) DeepCopy() *NewClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesParameters) DeepCopyInto(out *NewClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesParameters.
func (in *NewClusterAzureAttributesParameters) DeepCopy() *NewClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfDbfsInitParameters) DeepCopyInto(out *NewClusterClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfDbfsInitParameters.
func (in *NewClusterClusterLogConfDbfsInitParameters) DeepCopy() *NewClusterClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfDbfsObservation) DeepCopyInto(out *NewClusterClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfDbfsObservation.
func (in *NewClusterClusterLogConfDbfsObservation) DeepCopy() *NewClusterClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfDbfsParameters) DeepCopyInto(out *NewClusterClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfDbfsParameters.
func (in *NewClusterClusterLogConfDbfsParameters) DeepCopy() *NewClusterClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfInitParameters) DeepCopyInto(out *NewClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfInitParameters.
func (in *NewClusterClusterLogConfInitParameters) DeepCopy() *NewClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfObservation) DeepCopyInto(out *NewClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfObservation.
func (in *NewClusterClusterLogConfObservation) DeepCopy() *NewClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfParameters) DeepCopyInto(out *NewClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfParameters.
func (in *NewClusterClusterLogConfParameters) DeepCopy() *NewClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfS3InitParameters) DeepCopyInto(out *NewClusterClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfS3InitParameters.
func (in *NewClusterClusterLogConfS3InitParameters) DeepCopy() *NewClusterClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfS3Observation) DeepCopyInto(out *NewClusterClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfS3Observation.
func (in *NewClusterClusterLogConfS3Observation) DeepCopy() *NewClusterClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfS3Parameters) DeepCopyInto(out *NewClusterClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfS3Parameters.
func (in *NewClusterClusterLogConfS3Parameters) DeepCopy() *NewClusterClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoInitParameters) DeepCopyInto(out *NewClusterClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]ClusterMountInfoNetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoInitParameters.
func (in *NewClusterClusterMountInfoInitParameters) DeepCopy() *NewClusterClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopyInto(out *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopy() *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopyInto(out *NewClusterClusterMountInfoNetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoNetworkFilesystemInfoObservation.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopy() *NewClusterClusterMountInfoNetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoNetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopyInto(out *NewClusterClusterMountInfoNetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoNetworkFilesystemInfoParameters.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopy() *NewClusterClusterMountInfoNetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoNetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoObservation) DeepCopyInto(out *NewClusterClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]ClusterMountInfoNetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoObservation.
func (in *NewClusterClusterMountInfoObservation) DeepCopy() *NewClusterClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoParameters) DeepCopyInto(out *NewClusterClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]ClusterMountInfoNetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoParameters.
func (in *NewClusterClusterMountInfoParameters) DeepCopy() *NewClusterClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageBasicAuthInitParameters) DeepCopyInto(out *NewClusterDockerImageBasicAuthInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageBasicAuthInitParameters.
func (in *NewClusterDockerImageBasicAuthInitParameters) DeepCopy() *NewClusterDockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageBasicAuthObservation) DeepCopyInto(out *NewClusterDockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageBasicAuthObservation.
func (in *NewClusterDockerImageBasicAuthObservation) DeepCopy() *NewClusterDockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageBasicAuthParameters) DeepCopyInto(out *NewClusterDockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageBasicAuthParameters.
func (in *NewClusterDockerImageBasicAuthParameters) DeepCopy() *NewClusterDockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageInitParameters) DeepCopyInto(out *NewClusterDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]DockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageInitParameters.
func (in *NewClusterDockerImageInitParameters) DeepCopy() *NewClusterDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageObservation) DeepCopyInto(out *NewClusterDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]DockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageObservation.
func (in *NewClusterDockerImageObservation) DeepCopy() *NewClusterDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageParameters) DeepCopyInto(out *NewClusterDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]DockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageParameters.
func (in *NewClusterDockerImageParameters) DeepCopy() *NewClusterDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterGCPAttributesInitParameters) DeepCopyInto(out *NewClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterGCPAttributesInitParameters.
func (in *NewClusterGCPAttributesInitParameters) DeepCopy() *NewClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterGCPAttributesObservation) DeepCopyInto(out *NewClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterGCPAttributesObservation.
func (in *NewClusterGCPAttributesObservation) DeepCopy() *NewClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterGCPAttributesParameters) DeepCopyInto(out *NewClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterGCPAttributesParameters.
func (in *NewClusterGCPAttributesParameters) DeepCopy() *NewClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitParameters) DeepCopyInto(out *NewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitParameters.
func (in *NewClusterInitParameters) DeepCopy() *NewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsAbfssInitParameters) DeepCopyInto(out *NewClusterInitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsAbfssInitParameters.
func (in *NewClusterInitScriptsAbfssInitParameters) DeepCopy() *NewClusterInitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsAbfssObservation) DeepCopyInto(out *NewClusterInitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsAbfssObservation.
func (in *NewClusterInitScriptsAbfssObservation) DeepCopy() *NewClusterInitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsAbfssParameters) DeepCopyInto(out *NewClusterInitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsAbfssParameters.
func (in *NewClusterInitScriptsAbfssParameters) DeepCopy() *NewClusterInitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *NewClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsDbfsInitParameters.
func (in *NewClusterInitScriptsDbfsInitParameters) DeepCopy() *NewClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsDbfsObservation) DeepCopyInto(out *NewClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsDbfsObservation.
func (in *NewClusterInitScriptsDbfsObservation) DeepCopy() *NewClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsDbfsParameters) DeepCopyInto(out *NewClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsDbfsParameters.
func (in *NewClusterInitScriptsDbfsParameters) DeepCopy() *NewClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsFileInitParameters) DeepCopyInto(out *NewClusterInitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsFileInitParameters.
func (in *NewClusterInitScriptsFileInitParameters) DeepCopy() *NewClusterInitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsFileObservation) DeepCopyInto(out *NewClusterInitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsFileObservation.
func (in *NewClusterInitScriptsFileObservation) DeepCopy() *NewClusterInitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsFileParameters) DeepCopyInto(out *NewClusterInitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsFileParameters.
func (in *NewClusterInitScriptsFileParameters) DeepCopy() *NewClusterInitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsGcsInitParameters) DeepCopyInto(out *NewClusterInitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsGcsInitParameters.
func (in *NewClusterInitScriptsGcsInitParameters) DeepCopy() *NewClusterInitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsGcsObservation) DeepCopyInto(out *NewClusterInitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsGcsObservation.
func (in *NewClusterInitScriptsGcsObservation) DeepCopy() *NewClusterInitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsGcsParameters) DeepCopyInto(out *NewClusterInitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsGcsParameters.
func (in *NewClusterInitScriptsGcsParameters) DeepCopy() *NewClusterInitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsInitParameters) DeepCopyInto(out *NewClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]InitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]InitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]InitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]InitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]InitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsInitParameters.
func (in *NewClusterInitScriptsInitParameters) DeepCopy() *NewClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsObservation) DeepCopyInto(out *NewClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]InitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]InitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]InitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]InitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]InitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsObservation.
func (in *NewClusterInitScriptsObservation) DeepCopy() *NewClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsParameters) DeepCopyInto(out *NewClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]InitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]InitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]InitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]InitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]InitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsParameters.
func (in *NewClusterInitScriptsParameters) DeepCopy() *NewClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsS3InitParameters) DeepCopyInto(out *NewClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsS3InitParameters.
func (in *NewClusterInitScriptsS3InitParameters) DeepCopy() *NewClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsS3Observation) DeepCopyInto(out *NewClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsS3Observation.
func (in *NewClusterInitScriptsS3Observation) DeepCopy() *NewClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsS3Parameters) DeepCopyInto(out *NewClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsS3Parameters.
func (in *NewClusterInitScriptsS3Parameters) DeepCopy() *NewClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsVolumesInitParameters) DeepCopyInto(out *NewClusterInitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsVolumesInitParameters.
func (in *NewClusterInitScriptsVolumesInitParameters) DeepCopy() *NewClusterInitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsVolumesObservation) DeepCopyInto(out *NewClusterInitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsVolumesObservation.
func (in *NewClusterInitScriptsVolumesObservation) DeepCopy() *NewClusterInitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsVolumesParameters) DeepCopyInto(out *NewClusterInitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsVolumesParameters.
func (in *NewClusterInitScriptsVolumesParameters) DeepCopy() *NewClusterInitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsWorkspaceInitParameters) DeepCopyInto(out *NewClusterInitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsWorkspaceInitParameters.
func (in *NewClusterInitScriptsWorkspaceInitParameters) DeepCopy() *NewClusterInitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsWorkspaceObservation) DeepCopyInto(out *NewClusterInitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsWorkspaceObservation.
func (in *NewClusterInitScriptsWorkspaceObservation) DeepCopy() *NewClusterInitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsWorkspaceParameters) DeepCopyInto(out *NewClusterInitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsWorkspaceParameters.
func (in *NewClusterInitScriptsWorkspaceParameters) DeepCopy() *NewClusterInitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterObservation) DeepCopyInto(out *NewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterObservation.
func (in *NewClusterObservation) DeepCopy() *NewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterParameters) DeepCopyInto(out *NewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterParameters.
func (in *NewClusterParameters) DeepCopy() *NewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeClientsInitParameters) DeepCopyInto(out *NewClusterWorkloadTypeClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeClientsInitParameters.
func (in *NewClusterWorkloadTypeClientsInitParameters) DeepCopy() *NewClusterWorkloadTypeClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeClientsObservation) DeepCopyInto(out *NewClusterWorkloadTypeClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeClientsObservation.
func (in *NewClusterWorkloadTypeClientsObservation) DeepCopy() *NewClusterWorkloadTypeClientsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeClientsParameters) DeepCopyInto(out *NewClusterWorkloadTypeClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeClientsParameters.
func (in *NewClusterWorkloadTypeClientsParameters) DeepCopy() *NewClusterWorkloadTypeClientsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeInitParameters) DeepCopyInto(out *NewClusterWorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]WorkloadTypeClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeInitParameters.
func (in *NewClusterWorkloadTypeInitParameters) DeepCopy() *NewClusterWorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeObservation) DeepCopyInto(out *NewClusterWorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]WorkloadTypeClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeObservation.
func (in *NewClusterWorkloadTypeObservation) DeepCopy() *NewClusterWorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeParameters) DeepCopyInto(out *NewClusterWorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]WorkloadTypeClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeParameters.
func (in *NewClusterWorkloadTypeParameters) DeepCopy() *NewClusterWorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookTaskInitParameters) DeepCopyInto(out *NotebookTaskInitParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookTaskInitParameters.
func (in *NotebookTaskInitParameters) DeepCopy() *NotebookTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookTaskObservation) DeepCopyInto(out *NotebookTaskObservation) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookTaskObservation.
func (in *NotebookTaskObservation) DeepCopy() *NotebookTaskObservation {
	if in == nil {
		return nil
	}
	out := new(NotebookTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookTaskParameters) DeepCopyInto(out *NotebookTaskParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookTaskParameters.
func (in *NotebookTaskParameters) DeepCopy() *NotebookTaskParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsInitParameters) DeepCopyInto(out *NotificationSettingsInitParameters) {
	*out = *in
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsInitParameters.
func (in *NotificationSettingsInitParameters) DeepCopy() *NotificationSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsObservation) DeepCopyInto(out *NotificationSettingsObservation) {
	*out = *in
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsObservation.
func (in *NotificationSettingsObservation) DeepCopy() *NotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsParameters) DeepCopyInto(out *NotificationSettingsParameters) {
	*out = *in
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsParameters.
func (in *NotificationSettingsParameters) DeepCopy() *NotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnDurationWarningThresholdExceededInitParameters) DeepCopyInto(out *OnDurationWarningThresholdExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnDurationWarningThresholdExceededInitParameters.
func (in *OnDurationWarningThresholdExceededInitParameters) DeepCopy() *OnDurationWarningThresholdExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnDurationWarningThresholdExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnDurationWarningThresholdExceededObservation) DeepCopyInto(out *OnDurationWarningThresholdExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnDurationWarningThresholdExceededObservation.
func (in *OnDurationWarningThresholdExceededObservation) DeepCopy() *OnDurationWarningThresholdExceededObservation {
	if in == nil {
		return nil
	}
	out := new(OnDurationWarningThresholdExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnDurationWarningThresholdExceededParameters) DeepCopyInto(out *OnDurationWarningThresholdExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnDurationWarningThresholdExceededParameters.
func (in *OnDurationWarningThresholdExceededParameters) DeepCopy() *OnDurationWarningThresholdExceededParameters {
	if in == nil {
		return nil
	}
	out := new(OnDurationWarningThresholdExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureInitParameters) DeepCopyInto(out *OnFailureInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureInitParameters.
func (in *OnFailureInitParameters) DeepCopy() *OnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureObservation) DeepCopyInto(out *OnFailureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureObservation.
func (in *OnFailureObservation) DeepCopy() *OnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(OnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureParameters) DeepCopyInto(out *OnFailureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureParameters.
func (in *OnFailureParameters) DeepCopy() *OnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(OnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStartInitParameters) DeepCopyInto(out *OnStartInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStartInitParameters.
func (in *OnStartInitParameters) DeepCopy() *OnStartInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnStartInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStartObservation) DeepCopyInto(out *OnStartObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStartObservation.
func (in *OnStartObservation) DeepCopy() *OnStartObservation {
	if in == nil {
		return nil
	}
	out := new(OnStartObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStartParameters) DeepCopyInto(out *OnStartParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStartParameters.
func (in *OnStartParameters) DeepCopy() *OnStartParameters {
	if in == nil {
		return nil
	}
	out := new(OnStartParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessInitParameters) DeepCopyInto(out *OnSuccessInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessInitParameters.
func (in *OnSuccessInitParameters) DeepCopy() *OnSuccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnSuccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessObservation) DeepCopyInto(out *OnSuccessObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessObservation.
func (in *OnSuccessObservation) DeepCopy() *OnSuccessObservation {
	if in == nil {
		return nil
	}
	out := new(OnSuccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessParameters) DeepCopyInto(out *OnSuccessParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessParameters.
func (in *OnSuccessParameters) DeepCopy() *OnSuccessParameters {
	if in == nil {
		return nil
	}
	out := new(OnSuccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterInitParameters) DeepCopyInto(out *ParameterInitParameters) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterInitParameters.
func (in *ParameterInitParameters) DeepCopy() *ParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterObservation) DeepCopyInto(out *ParameterObservation) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterObservation.
func (in *ParameterObservation) DeepCopy() *ParameterObservation {
	if in == nil {
		return nil
	}
	out := new(ParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterParameters) DeepCopyInto(out *ParameterParameters) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterParameters.
func (in *ParameterParameters) DeepCopy() *ParameterParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTaskInitParameters) DeepCopyInto(out *PipelineTaskInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTaskInitParameters.
func (in *PipelineTaskInitParameters) DeepCopy() *PipelineTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTaskObservation) DeepCopyInto(out *PipelineTaskObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTaskObservation.
func (in *PipelineTaskObservation) DeepCopy() *PipelineTaskObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTaskParameters) DeepCopyInto(out *PipelineTaskParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTaskParameters.
func (in *PipelineTaskParameters) DeepCopy() *PipelineTaskParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiInitParameters) DeepCopyInto(out *PypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiInitParameters.
func (in *PypiInitParameters) DeepCopy() *PypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(PypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiObservation) DeepCopyInto(out *PypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiObservation.
func (in *PypiObservation) DeepCopy() *PypiObservation {
	if in == nil {
		return nil
	}
	out := new(PypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiParameters) DeepCopyInto(out *PypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiParameters.
func (in *PypiParameters) DeepCopy() *PypiParameters {
	if in == nil {
		return nil
	}
	out := new(PypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonWheelTaskInitParameters) DeepCopyInto(out *PythonWheelTaskInitParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonWheelTaskInitParameters.
func (in *PythonWheelTaskInitParameters) DeepCopy() *PythonWheelTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(PythonWheelTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonWheelTaskObservation) DeepCopyInto(out *PythonWheelTaskObservation) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonWheelTaskObservation.
func (in *PythonWheelTaskObservation) DeepCopy() *PythonWheelTaskObservation {
	if in == nil {
		return nil
	}
	out := new(PythonWheelTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonWheelTaskParameters) DeepCopyInto(out *PythonWheelTaskParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonWheelTaskParameters.
func (in *PythonWheelTaskParameters) DeepCopy() *PythonWheelTaskParameters {
	if in == nil {
		return nil
	}
	out := new(PythonWheelTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryInitParameters) DeepCopyInto(out *QueryInitParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryInitParameters.
func (in *QueryInitParameters) DeepCopy() *QueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryObservation) DeepCopyInto(out *QueryObservation) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryObservation.
func (in *QueryObservation) DeepCopy() *QueryObservation {
	if in == nil {
		return nil
	}
	out := new(QueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameters) DeepCopyInto(out *QueryParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameters.
func (in *QueryParameters) DeepCopy() *QueryParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueInitParameters) DeepCopyInto(out *QueueInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueInitParameters.
func (in *QueueInitParameters) DeepCopy() *QueueInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueObservation) DeepCopyInto(out *QueueObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueObservation.
func (in *QueueObservation) DeepCopy() *QueueObservation {
	if in == nil {
		return nil
	}
	out := new(QueueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueParameters) DeepCopyInto(out *QueueParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueParameters.
func (in *QueueParameters) DeepCopy() *QueueParameters {
	if in == nil {
		return nil
	}
	out := new(QueueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesInitParameters) DeepCopyInto(out *RulesInitParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesInitParameters.
func (in *RulesInitParameters) DeepCopy() *RulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsInitParameters) DeepCopyInto(out *RunAsInitParameters) {
	*out = *in
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsInitParameters.
func (in *RunAsInitParameters) DeepCopy() *RunAsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunAsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsObservation) DeepCopyInto(out *RunAsObservation) {
	*out = *in
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsObservation.
func (in *RunAsObservation) DeepCopy() *RunAsObservation {
	if in == nil {
		return nil
	}
	out := new(RunAsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsParameters) DeepCopyInto(out *RunAsParameters) {
	*out = *in
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsParameters.
func (in *RunAsParameters) DeepCopy() *RunAsParameters {
	if in == nil {
		return nil
	}
	out := new(RunAsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskInitParameters) DeepCopyInto(out *RunJobTaskInitParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskInitParameters.
func (in *RunJobTaskInitParameters) DeepCopy() *RunJobTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskObservation) DeepCopyInto(out *RunJobTaskObservation) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskObservation.
func (in *RunJobTaskObservation) DeepCopy() *RunJobTaskObservation {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskParameters) DeepCopyInto(out *RunJobTaskParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskParameters.
func (in *RunJobTaskParameters) DeepCopy() *RunJobTaskParameters {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3InitParameters) DeepCopyInto(out *S3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3InitParameters.
func (in *S3InitParameters) DeepCopy() *S3InitParameters {
	if in == nil {
		return nil
	}
	out := new(S3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Observation) DeepCopyInto(out *S3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Observation.
func (in *S3Observation) DeepCopy() *S3Observation {
	if in == nil {
		return nil
	}
	out := new(S3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Parameters) DeepCopyInto(out *S3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Parameters.
func (in *S3Parameters) DeepCopy() *S3Parameters {
	if in == nil {
		return nil
	}
	out := new(S3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskAlertInitParameters) DeepCopyInto(out *SQLTaskAlertInitParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]AlertSubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskAlertInitParameters.
func (in *SQLTaskAlertInitParameters) DeepCopy() *SQLTaskAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskAlertObservation) DeepCopyInto(out *SQLTaskAlertObservation) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]AlertSubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskAlertObservation.
func (in *SQLTaskAlertObservation) DeepCopy() *SQLTaskAlertObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskAlertParameters) DeepCopyInto(out *SQLTaskAlertParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]AlertSubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskAlertParameters.
func (in *SQLTaskAlertParameters) DeepCopy() *SQLTaskAlertParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardInitParameters) DeepCopyInto(out *SQLTaskDashboardInitParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SQLTaskDashboardSubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardInitParameters.
func (in *SQLTaskDashboardInitParameters) DeepCopy() *SQLTaskDashboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardObservation) DeepCopyInto(out *SQLTaskDashboardObservation) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SQLTaskDashboardSubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardObservation.
func (in *SQLTaskDashboardObservation) DeepCopy() *SQLTaskDashboardObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardParameters) DeepCopyInto(out *SQLTaskDashboardParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SQLTaskDashboardSubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardParameters.
func (in *SQLTaskDashboardParameters) DeepCopy() *SQLTaskDashboardParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardSubscriptionsInitParameters) DeepCopyInto(out *SQLTaskDashboardSubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardSubscriptionsInitParameters.
func (in *SQLTaskDashboardSubscriptionsInitParameters) DeepCopy() *SQLTaskDashboardSubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardSubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardSubscriptionsObservation) DeepCopyInto(out *SQLTaskDashboardSubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardSubscriptionsObservation.
func (in *SQLTaskDashboardSubscriptionsObservation) DeepCopy() *SQLTaskDashboardSubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardSubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardSubscriptionsParameters) DeepCopyInto(out *SQLTaskDashboardSubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardSubscriptionsParameters.
func (in *SQLTaskDashboardSubscriptionsParameters) DeepCopy() *SQLTaskDashboardSubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardSubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskFileInitParameters) DeepCopyInto(out *SQLTaskFileInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskFileInitParameters.
func (in *SQLTaskFileInitParameters) DeepCopy() *SQLTaskFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskFileObservation) DeepCopyInto(out *SQLTaskFileObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskFileObservation.
func (in *SQLTaskFileObservation) DeepCopy() *SQLTaskFileObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskFileParameters) DeepCopyInto(out *SQLTaskFileParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskFileParameters.
func (in *SQLTaskFileParameters) DeepCopy() *SQLTaskFileParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskInitParameters) DeepCopyInto(out *SQLTaskInitParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]AlertInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]DashboardInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]SQLTaskFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskInitParameters.
func (in *SQLTaskInitParameters) DeepCopy() *SQLTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskObservation) DeepCopyInto(out *SQLTaskObservation) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]AlertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]DashboardObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]SQLTaskFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskObservation.
func (in *SQLTaskObservation) DeepCopy() *SQLTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskParameters) DeepCopyInto(out *SQLTaskParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]AlertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]DashboardParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]SQLTaskFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskParameters.
func (in *SQLTaskParameters) DeepCopy() *SQLTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskQueryInitParameters) DeepCopyInto(out *SQLTaskQueryInitParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskQueryInitParameters.
func (in *SQLTaskQueryInitParameters) DeepCopy() *SQLTaskQueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskQueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskQueryObservation) DeepCopyInto(out *SQLTaskQueryObservation) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskQueryObservation.
func (in *SQLTaskQueryObservation) DeepCopy() *SQLTaskQueryObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskQueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskQueryParameters) DeepCopyInto(out *SQLTaskQueryParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskQueryParameters.
func (in *SQLTaskQueryParameters) DeepCopy() *SQLTaskQueryParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskQueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJarTaskInitParameters) DeepCopyInto(out *SparkJarTaskInitParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJarTaskInitParameters.
func (in *SparkJarTaskInitParameters) DeepCopy() *SparkJarTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkJarTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJarTaskObservation) DeepCopyInto(out *SparkJarTaskObservation) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJarTaskObservation.
func (in *SparkJarTaskObservation) DeepCopy() *SparkJarTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SparkJarTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJarTaskParameters) DeepCopyInto(out *SparkJarTaskParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJarTaskParameters.
func (in *SparkJarTaskParameters) DeepCopy() *SparkJarTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SparkJarTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkPythonTaskInitParameters) DeepCopyInto(out *SparkPythonTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkPythonTaskInitParameters.
func (in *SparkPythonTaskInitParameters) DeepCopy() *SparkPythonTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkPythonTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkPythonTaskObservation) DeepCopyInto(out *SparkPythonTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkPythonTaskObservation.
func (in *SparkPythonTaskObservation) DeepCopy() *SparkPythonTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SparkPythonTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkPythonTaskParameters) DeepCopyInto(out *SparkPythonTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkPythonTaskParameters.
func (in *SparkPythonTaskParameters) DeepCopy() *SparkPythonTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SparkPythonTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSubmitTaskInitParameters) DeepCopyInto(out *SparkSubmitTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSubmitTaskInitParameters.
func (in *SparkSubmitTaskInitParameters) DeepCopy() *SparkSubmitTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSubmitTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSubmitTaskObservation) DeepCopyInto(out *SparkSubmitTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSubmitTaskObservation.
func (in *SparkSubmitTaskObservation) DeepCopy() *SparkSubmitTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SparkSubmitTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSubmitTaskParameters) DeepCopyInto(out *SparkSubmitTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSubmitTaskParameters.
func (in *SparkSubmitTaskParameters) DeepCopy() *SparkSubmitTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSubmitTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecInitParameters) DeepCopyInto(out *SpecInitParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecInitParameters.
func (in *SpecInitParameters) DeepCopy() *SpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecObservation) DeepCopyInto(out *SpecObservation) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecObservation.
func (in *SpecObservation) DeepCopy() *SpecObservation {
	if in == nil {
		return nil
	}
	out := new(SpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecParameters) DeepCopyInto(out *SpecParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecParameters.
func (in *SpecParameters) DeepCopy() *SpecParameters {
	if in == nil {
		return nil
	}
	out := new(SpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionsInitParameters) DeepCopyInto(out *SubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionsInitParameters.
func (in *SubscriptionsInitParameters) DeepCopy() *SubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionsObservation) DeepCopyInto(out *SubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionsObservation.
func (in *SubscriptionsObservation) DeepCopy() *SubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionsParameters) DeepCopyInto(out *SubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionsParameters.
func (in *SubscriptionsParameters) DeepCopy() *SubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskConditionTaskInitParameters) DeepCopyInto(out *TaskConditionTaskInitParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskConditionTaskInitParameters.
func (in *TaskConditionTaskInitParameters) DeepCopy() *TaskConditionTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskConditionTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskConditionTaskObservation) DeepCopyInto(out *TaskConditionTaskObservation) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskConditionTaskObservation.
func (in *TaskConditionTaskObservation) DeepCopy() *TaskConditionTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskConditionTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskConditionTaskParameters) DeepCopyInto(out *TaskConditionTaskParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskConditionTaskParameters.
func (in *TaskConditionTaskParameters) DeepCopy() *TaskConditionTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskConditionTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDbtTaskInitParameters) DeepCopyInto(out *TaskDbtTaskInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDbtTaskInitParameters.
func (in *TaskDbtTaskInitParameters) DeepCopy() *TaskDbtTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDbtTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDbtTaskObservation) DeepCopyInto(out *TaskDbtTaskObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDbtTaskObservation.
func (in *TaskDbtTaskObservation) DeepCopy() *TaskDbtTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskDbtTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDbtTaskParameters) DeepCopyInto(out *TaskDbtTaskParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDbtTaskParameters.
func (in *TaskDbtTaskParameters) DeepCopy() *TaskDbtTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDbtTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDependsOnInitParameters) DeepCopyInto(out *TaskDependsOnInitParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDependsOnInitParameters.
func (in *TaskDependsOnInitParameters) DeepCopy() *TaskDependsOnInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDependsOnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDependsOnObservation) DeepCopyInto(out *TaskDependsOnObservation) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDependsOnObservation.
func (in *TaskDependsOnObservation) DeepCopy() *TaskDependsOnObservation {
	if in == nil {
		return nil
	}
	out := new(TaskDependsOnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDependsOnParameters) DeepCopyInto(out *TaskDependsOnParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDependsOnParameters.
func (in *TaskDependsOnParameters) DeepCopy() *TaskDependsOnParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDependsOnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEmailNotificationsInitParameters) DeepCopyInto(out *TaskEmailNotificationsInitParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEmailNotificationsInitParameters.
func (in *TaskEmailNotificationsInitParameters) DeepCopy() *TaskEmailNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskEmailNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEmailNotificationsObservation) DeepCopyInto(out *TaskEmailNotificationsObservation) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEmailNotificationsObservation.
func (in *TaskEmailNotificationsObservation) DeepCopy() *TaskEmailNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskEmailNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEmailNotificationsParameters) DeepCopyInto(out *TaskEmailNotificationsParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEmailNotificationsParameters.
func (in *TaskEmailNotificationsParameters) DeepCopy() *TaskEmailNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskEmailNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthInitParameters) DeepCopyInto(out *TaskHealthInitParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]HealthRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthInitParameters.
func (in *TaskHealthInitParameters) DeepCopy() *TaskHealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthObservation) DeepCopyInto(out *TaskHealthObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]HealthRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthObservation.
func (in *TaskHealthObservation) DeepCopy() *TaskHealthObservation {
	if in == nil {
		return nil
	}
	out := new(TaskHealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthParameters) DeepCopyInto(out *TaskHealthParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]HealthRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthParameters.
func (in *TaskHealthParameters) DeepCopy() *TaskHealthParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthRulesInitParameters) DeepCopyInto(out *TaskHealthRulesInitParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthRulesInitParameters.
func (in *TaskHealthRulesInitParameters) DeepCopy() *TaskHealthRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthRulesObservation) DeepCopyInto(out *TaskHealthRulesObservation) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthRulesObservation.
func (in *TaskHealthRulesObservation) DeepCopy() *TaskHealthRulesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskHealthRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthRulesParameters) DeepCopyInto(out *TaskHealthRulesParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthRulesParameters.
func (in *TaskHealthRulesParameters) DeepCopy() *TaskHealthRulesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskInitParameters) DeepCopyInto(out *TaskInitParameters) {
	*out = *in
	if in.ComputeKey != nil {
		in, out := &in.ComputeKey, &out.ComputeKey
		*out = new(string)
		**out = **in
	}
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]ConditionTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]TaskDbtTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]DependsOnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]TaskEmailNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.ForEachTask != nil {
		in, out := &in.ForEachTask, &out.ForEachTask
		*out = make([]ForEachTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]JobTaskHealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobTaskNewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]JobTaskNotebookTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]JobTaskNotificationSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]JobTaskPipelineTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]JobTaskPythonWheelTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]JobTaskRunJobTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]TaskSQLTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]JobTaskSparkJarTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]JobTaskSparkPythonTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]JobTaskSparkSubmitTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]TaskWebhookNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskInitParameters.
func (in *TaskInitParameters) DeepCopy() *TaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryCranInitParameters) DeepCopyInto(out *TaskLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryCranInitParameters.
func (in *TaskLibraryCranInitParameters) DeepCopy() *TaskLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryCranObservation) DeepCopyInto(out *TaskLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryCranObservation.
func (in *TaskLibraryCranObservation) DeepCopy() *TaskLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryCranParameters) DeepCopyInto(out *TaskLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryCranParameters.
func (in *TaskLibraryCranParameters) DeepCopy() *TaskLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryInitParameters) DeepCopyInto(out *TaskLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryInitParameters.
func (in *TaskLibraryInitParameters) DeepCopy() *TaskLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryMavenInitParameters) DeepCopyInto(out *TaskLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryMavenInitParameters.
func (in *TaskLibraryMavenInitParameters) DeepCopy() *TaskLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryMavenObservation) DeepCopyInto(out *TaskLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryMavenObservation.
func (in *TaskLibraryMavenObservation) DeepCopy() *TaskLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryMavenParameters) DeepCopyInto(out *TaskLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryMavenParameters.
func (in *TaskLibraryMavenParameters) DeepCopy() *TaskLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryObservation) DeepCopyInto(out *TaskLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryObservation.
func (in *TaskLibraryObservation) DeepCopy() *TaskLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryParameters) DeepCopyInto(out *TaskLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryParameters.
func (in *TaskLibraryParameters) DeepCopy() *TaskLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryPypiInitParameters) DeepCopyInto(out *TaskLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryPypiInitParameters.
func (in *TaskLibraryPypiInitParameters) DeepCopy() *TaskLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryPypiObservation) DeepCopyInto(out *TaskLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryPypiObservation.
func (in *TaskLibraryPypiObservation) DeepCopy() *TaskLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryPypiParameters) DeepCopyInto(out *TaskLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryPypiParameters.
func (in *TaskLibraryPypiParameters) DeepCopy() *TaskLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAutoscaleInitParameters) DeepCopyInto(out *TaskNewClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAutoscaleInitParameters.
func (in *TaskNewClusterAutoscaleInitParameters) DeepCopy() *TaskNewClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAutoscaleObservation) DeepCopyInto(out *TaskNewClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAutoscaleObservation.
func (in *TaskNewClusterAutoscaleObservation) DeepCopy() *TaskNewClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAutoscaleParameters) DeepCopyInto(out *TaskNewClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAutoscaleParameters.
func (in *TaskNewClusterAutoscaleParameters) DeepCopy() *TaskNewClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAwsAttributesInitParameters) DeepCopyInto(out *TaskNewClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAwsAttributesInitParameters.
func (in *TaskNewClusterAwsAttributesInitParameters) DeepCopy() *TaskNewClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAwsAttributesObservation) DeepCopyInto(out *TaskNewClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAwsAttributesObservation.
func (in *TaskNewClusterAwsAttributesObservation) DeepCopy() *TaskNewClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAwsAttributesParameters) DeepCopyInto(out *TaskNewClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAwsAttributesParameters.
func (in *TaskNewClusterAwsAttributesParameters) DeepCopy() *TaskNewClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesInitParameters) DeepCopyInto(out *TaskNewClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesInitParameters.
func (in *TaskNewClusterAzureAttributesInitParameters) DeepCopy() *TaskNewClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesObservation) DeepCopyInto(out *TaskNewClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesObservation.
func (in *TaskNewClusterAzureAttributesObservation) DeepCopy() *TaskNewClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesParameters) DeepCopyInto(out *TaskNewClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesParameters.
func (in *TaskNewClusterAzureAttributesParameters) DeepCopy() *TaskNewClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfDbfsInitParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfDbfsInitParameters.
func (in *TaskNewClusterClusterLogConfDbfsInitParameters) DeepCopy() *TaskNewClusterClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfDbfsObservation) DeepCopyInto(out *TaskNewClusterClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfDbfsObservation.
func (in *TaskNewClusterClusterLogConfDbfsObservation) DeepCopy() *TaskNewClusterClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfDbfsParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfDbfsParameters.
func (in *TaskNewClusterClusterLogConfDbfsParameters) DeepCopy() *TaskNewClusterClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfInitParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfInitParameters.
func (in *TaskNewClusterClusterLogConfInitParameters) DeepCopy() *TaskNewClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfObservation) DeepCopyInto(out *TaskNewClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfObservation.
func (in *TaskNewClusterClusterLogConfObservation) DeepCopy() *TaskNewClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfParameters.
func (in *TaskNewClusterClusterLogConfParameters) DeepCopy() *TaskNewClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfS3InitParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfS3InitParameters.
func (in *TaskNewClusterClusterLogConfS3InitParameters) DeepCopy() *TaskNewClusterClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfS3Observation) DeepCopyInto(out *TaskNewClusterClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfS3Observation.
func (in *TaskNewClusterClusterLogConfS3Observation) DeepCopy() *TaskNewClusterClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfS3Parameters) DeepCopyInto(out *TaskNewClusterClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfS3Parameters.
func (in *TaskNewClusterClusterLogConfS3Parameters) DeepCopy() *TaskNewClusterClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoInitParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoInitParameters.
func (in *TaskNewClusterClusterMountInfoInitParameters) DeepCopy() *TaskNewClusterClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopy() *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopyInto(out *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopy() *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopy() *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoObservation) DeepCopyInto(out *TaskNewClusterClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NewClusterClusterMountInfoNetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoObservation.
func (in *TaskNewClusterClusterMountInfoObservation) DeepCopy() *TaskNewClusterClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NewClusterClusterMountInfoNetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoParameters.
func (in *TaskNewClusterClusterMountInfoParameters) DeepCopy() *TaskNewClusterClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageBasicAuthInitParameters) DeepCopyInto(out *TaskNewClusterDockerImageBasicAuthInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageBasicAuthInitParameters.
func (in *TaskNewClusterDockerImageBasicAuthInitParameters) DeepCopy() *TaskNewClusterDockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageBasicAuthObservation) DeepCopyInto(out *TaskNewClusterDockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageBasicAuthObservation.
func (in *TaskNewClusterDockerImageBasicAuthObservation) DeepCopy() *TaskNewClusterDockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageBasicAuthParameters) DeepCopyInto(out *TaskNewClusterDockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageBasicAuthParameters.
func (in *TaskNewClusterDockerImageBasicAuthParameters) DeepCopy() *TaskNewClusterDockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageInitParameters) DeepCopyInto(out *TaskNewClusterDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]NewClusterDockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageInitParameters.
func (in *TaskNewClusterDockerImageInitParameters) DeepCopy() *TaskNewClusterDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageObservation) DeepCopyInto(out *TaskNewClusterDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]NewClusterDockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageObservation.
func (in *TaskNewClusterDockerImageObservation) DeepCopy() *TaskNewClusterDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageParameters) DeepCopyInto(out *TaskNewClusterDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]NewClusterDockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageParameters.
func (in *TaskNewClusterDockerImageParameters) DeepCopy() *TaskNewClusterDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterGCPAttributesInitParameters) DeepCopyInto(out *TaskNewClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterGCPAttributesInitParameters.
func (in *TaskNewClusterGCPAttributesInitParameters) DeepCopy() *TaskNewClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterGCPAttributesObservation) DeepCopyInto(out *TaskNewClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterGCPAttributesObservation.
func (in *TaskNewClusterGCPAttributesObservation) DeepCopy() *TaskNewClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterGCPAttributesParameters) DeepCopyInto(out *TaskNewClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterGCPAttributesParameters.
func (in *TaskNewClusterGCPAttributesParameters) DeepCopy() *TaskNewClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitParameters) DeepCopyInto(out *TaskNewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]TaskNewClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]TaskNewClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]TaskNewClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]TaskNewClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]TaskNewClusterClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]TaskNewClusterDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]TaskNewClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]TaskNewClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]TaskNewClusterWorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitParameters.
func (in *TaskNewClusterInitParameters) DeepCopy() *TaskNewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsAbfssInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsAbfssInitParameters.
func (in *TaskNewClusterInitScriptsAbfssInitParameters) DeepCopy() *TaskNewClusterInitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsAbfssObservation) DeepCopyInto(out *TaskNewClusterInitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsAbfssObservation.
func (in *TaskNewClusterInitScriptsAbfssObservation) DeepCopy() *TaskNewClusterInitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsAbfssParameters) DeepCopyInto(out *TaskNewClusterInitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsAbfssParameters.
func (in *TaskNewClusterInitScriptsAbfssParameters) DeepCopy() *TaskNewClusterInitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsDbfsInitParameters.
func (in *TaskNewClusterInitScriptsDbfsInitParameters) DeepCopy() *TaskNewClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsDbfsObservation) DeepCopyInto(out *TaskNewClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsDbfsObservation.
func (in *TaskNewClusterInitScriptsDbfsObservation) DeepCopy() *TaskNewClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsDbfsParameters) DeepCopyInto(out *TaskNewClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsDbfsParameters.
func (in *TaskNewClusterInitScriptsDbfsParameters) DeepCopy() *TaskNewClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsFileInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsFileInitParameters.
func (in *TaskNewClusterInitScriptsFileInitParameters) DeepCopy() *TaskNewClusterInitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsFileObservation) DeepCopyInto(out *TaskNewClusterInitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsFileObservation.
func (in *TaskNewClusterInitScriptsFileObservation) DeepCopy() *TaskNewClusterInitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsFileParameters) DeepCopyInto(out *TaskNewClusterInitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsFileParameters.
func (in *TaskNewClusterInitScriptsFileParameters) DeepCopy() *TaskNewClusterInitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsGcsInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsGcsInitParameters.
func (in *TaskNewClusterInitScriptsGcsInitParameters) DeepCopy() *TaskNewClusterInitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsGcsObservation) DeepCopyInto(out *TaskNewClusterInitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsGcsObservation.
func (in *TaskNewClusterInitScriptsGcsObservation) DeepCopy() *TaskNewClusterInitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsGcsParameters) DeepCopyInto(out *TaskNewClusterInitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsGcsParameters.
func (in *TaskNewClusterInitScriptsGcsParameters) DeepCopy() *TaskNewClusterInitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]NewClusterInitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]NewClusterInitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]NewClusterInitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]NewClusterInitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]NewClusterInitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsInitParameters.
func (in *TaskNewClusterInitScriptsInitParameters) DeepCopy() *TaskNewClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsObservation) DeepCopyInto(out *TaskNewClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]NewClusterInitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]NewClusterInitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]NewClusterInitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]NewClusterInitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]NewClusterInitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsObservation.
func (in *TaskNewClusterInitScriptsObservation) DeepCopy() *TaskNewClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsParameters) DeepCopyInto(out *TaskNewClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]NewClusterInitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]NewClusterInitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]NewClusterInitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]NewClusterInitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]NewClusterInitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsParameters.
func (in *TaskNewClusterInitScriptsParameters) DeepCopy() *TaskNewClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsS3InitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsS3InitParameters.
func (in *TaskNewClusterInitScriptsS3InitParameters) DeepCopy() *TaskNewClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsS3Observation) DeepCopyInto(out *TaskNewClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsS3Observation.
func (in *TaskNewClusterInitScriptsS3Observation) DeepCopy() *TaskNewClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsS3Parameters) DeepCopyInto(out *TaskNewClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsS3Parameters.
func (in *TaskNewClusterInitScriptsS3Parameters) DeepCopy() *TaskNewClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsVolumesInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsVolumesInitParameters.
func (in *TaskNewClusterInitScriptsVolumesInitParameters) DeepCopy() *TaskNewClusterInitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsVolumesObservation) DeepCopyInto(out *TaskNewClusterInitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsVolumesObservation.
func (in *TaskNewClusterInitScriptsVolumesObservation) DeepCopy() *TaskNewClusterInitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsVolumesParameters) DeepCopyInto(out *TaskNewClusterInitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsVolumesParameters.
func (in *TaskNewClusterInitScriptsVolumesParameters) DeepCopy() *TaskNewClusterInitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsWorkspaceInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsWorkspaceInitParameters.
func (in *TaskNewClusterInitScriptsWorkspaceInitParameters) DeepCopy() *TaskNewClusterInitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsWorkspaceObservation) DeepCopyInto(out *TaskNewClusterInitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsWorkspaceObservation.
func (in *TaskNewClusterInitScriptsWorkspaceObservation) DeepCopy() *TaskNewClusterInitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsWorkspaceParameters) DeepCopyInto(out *TaskNewClusterInitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsWorkspaceParameters.
func (in *TaskNewClusterInitScriptsWorkspaceParameters) DeepCopy() *TaskNewClusterInitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterObservation) DeepCopyInto(out *TaskNewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]TaskNewClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]TaskNewClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]TaskNewClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]TaskNewClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]TaskNewClusterClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]TaskNewClusterDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]TaskNewClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]TaskNewClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]TaskNewClusterWorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterObservation.
func (in *TaskNewClusterObservation) DeepCopy() *TaskNewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterParameters) DeepCopyInto(out *TaskNewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]TaskNewClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]TaskNewClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]TaskNewClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]TaskNewClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]TaskNewClusterClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]TaskNewClusterDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]TaskNewClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]TaskNewClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]TaskNewClusterWorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterParameters.
func (in *TaskNewClusterParameters) DeepCopy() *TaskNewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeClientsInitParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeClientsInitParameters.
func (in *TaskNewClusterWorkloadTypeClientsInitParameters) DeepCopy() *TaskNewClusterWorkloadTypeClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeClientsObservation) DeepCopyInto(out *TaskNewClusterWorkloadTypeClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeClientsObservation.
func (in *TaskNewClusterWorkloadTypeClientsObservation) DeepCopy() *TaskNewClusterWorkloadTypeClientsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeClientsParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeClientsParameters.
func (in *TaskNewClusterWorkloadTypeClientsParameters) DeepCopy() *TaskNewClusterWorkloadTypeClientsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeInitParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]NewClusterWorkloadTypeClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeInitParameters.
func (in *TaskNewClusterWorkloadTypeInitParameters) DeepCopy() *TaskNewClusterWorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeObservation) DeepCopyInto(out *TaskNewClusterWorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]NewClusterWorkloadTypeClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeObservation.
func (in *TaskNewClusterWorkloadTypeObservation) DeepCopy() *TaskNewClusterWorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]NewClusterWorkloadTypeClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeParameters.
func (in *TaskNewClusterWorkloadTypeParameters) DeepCopy() *TaskNewClusterWorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotebookTaskInitParameters) DeepCopyInto(out *TaskNotebookTaskInitParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotebookTaskInitParameters.
func (in *TaskNotebookTaskInitParameters) DeepCopy() *TaskNotebookTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotebookTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotebookTaskObservation) DeepCopyInto(out *TaskNotebookTaskObservation) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotebookTaskObservation.
func (in *TaskNotebookTaskObservation) DeepCopy() *TaskNotebookTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNotebookTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotebookTaskParameters) DeepCopyInto(out *TaskNotebookTaskParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotebookTaskParameters.
func (in *TaskNotebookTaskParameters) DeepCopy() *TaskNotebookTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotebookTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotificationSettingsInitParameters) DeepCopyInto(out *TaskNotificationSettingsInitParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotificationSettingsInitParameters.
func (in *TaskNotificationSettingsInitParameters) DeepCopy() *TaskNotificationSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotificationSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotificationSettingsObservation) DeepCopyInto(out *TaskNotificationSettingsObservation) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotificationSettingsObservation.
func (in *TaskNotificationSettingsObservation) DeepCopy() *TaskNotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotificationSettingsParameters) DeepCopyInto(out *TaskNotificationSettingsParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotificationSettingsParameters.
func (in *TaskNotificationSettingsParameters) DeepCopy() *TaskNotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskObservation) DeepCopyInto(out *TaskObservation) {
	*out = *in
	if in.ComputeKey != nil {
		in, out := &in.ComputeKey, &out.ComputeKey
		*out = new(string)
		**out = **in
	}
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]ConditionTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]TaskDbtTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]DependsOnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]TaskEmailNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.ForEachTask != nil {
		in, out := &in.ForEachTask, &out.ForEachTask
		*out = make([]ForEachTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]JobTaskHealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobTaskNewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]JobTaskNotebookTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]JobTaskNotificationSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]JobTaskPipelineTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]JobTaskPythonWheelTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]JobTaskRunJobTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]TaskSQLTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]JobTaskSparkJarTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]JobTaskSparkPythonTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]JobTaskSparkSubmitTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]TaskWebhookNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskObservation.
func (in *TaskObservation) DeepCopy() *TaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskParameters) DeepCopyInto(out *TaskParameters) {
	*out = *in
	if in.ComputeKey != nil {
		in, out := &in.ComputeKey, &out.ComputeKey
		*out = new(string)
		**out = **in
	}
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]ConditionTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]TaskDbtTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]DependsOnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]TaskEmailNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.ForEachTask != nil {
		in, out := &in.ForEachTask, &out.ForEachTask
		*out = make([]ForEachTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]JobTaskHealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobTaskNewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]JobTaskNotebookTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]JobTaskNotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]JobTaskPipelineTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]JobTaskPythonWheelTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]JobTaskRunJobTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]TaskSQLTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]JobTaskSparkJarTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]JobTaskSparkPythonTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]JobTaskSparkSubmitTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]TaskWebhookNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskParameters.
func (in *TaskParameters) DeepCopy() *TaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPipelineTaskInitParameters) DeepCopyInto(out *TaskPipelineTaskInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPipelineTaskInitParameters.
func (in *TaskPipelineTaskInitParameters) DeepCopy() *TaskPipelineTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPipelineTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPipelineTaskObservation) DeepCopyInto(out *TaskPipelineTaskObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPipelineTaskObservation.
func (in *TaskPipelineTaskObservation) DeepCopy() *TaskPipelineTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskPipelineTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPipelineTaskParameters) DeepCopyInto(out *TaskPipelineTaskParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPipelineTaskParameters.
func (in *TaskPipelineTaskParameters) DeepCopy() *TaskPipelineTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPipelineTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPythonWheelTaskInitParameters) DeepCopyInto(out *TaskPythonWheelTaskInitParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPythonWheelTaskInitParameters.
func (in *TaskPythonWheelTaskInitParameters) DeepCopy() *TaskPythonWheelTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPythonWheelTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPythonWheelTaskObservation) DeepCopyInto(out *TaskPythonWheelTaskObservation) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPythonWheelTaskObservation.
func (in *TaskPythonWheelTaskObservation) DeepCopy() *TaskPythonWheelTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskPythonWheelTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPythonWheelTaskParameters) DeepCopyInto(out *TaskPythonWheelTaskParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPythonWheelTaskParameters.
func (in *TaskPythonWheelTaskParameters) DeepCopy() *TaskPythonWheelTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPythonWheelTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunJobTaskInitParameters) DeepCopyInto(out *TaskRunJobTaskInitParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunJobTaskInitParameters.
func (in *TaskRunJobTaskInitParameters) DeepCopy() *TaskRunJobTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskRunJobTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunJobTaskObservation) DeepCopyInto(out *TaskRunJobTaskObservation) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunJobTaskObservation.
func (in *TaskRunJobTaskObservation) DeepCopy() *TaskRunJobTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskRunJobTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunJobTaskParameters) DeepCopyInto(out *TaskRunJobTaskParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunJobTaskParameters.
func (in *TaskRunJobTaskParameters) DeepCopy() *TaskRunJobTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskRunJobTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskFileInitParameters) DeepCopyInto(out *TaskSQLTaskFileInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskFileInitParameters.
func (in *TaskSQLTaskFileInitParameters) DeepCopy() *TaskSQLTaskFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskFileObservation) DeepCopyInto(out *TaskSQLTaskFileObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskFileObservation.
func (in *TaskSQLTaskFileObservation) DeepCopy() *TaskSQLTaskFileObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskFileParameters) DeepCopyInto(out *TaskSQLTaskFileParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskFileParameters.
func (in *TaskSQLTaskFileParameters) DeepCopy() *TaskSQLTaskFileParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskInitParameters) DeepCopyInto(out *TaskSQLTaskInitParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]SQLTaskAlertInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]SQLTaskDashboardInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskSQLTaskFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]SQLTaskQueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskInitParameters.
func (in *TaskSQLTaskInitParameters) DeepCopy() *TaskSQLTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskObservation) DeepCopyInto(out *TaskSQLTaskObservation) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]SQLTaskAlertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]SQLTaskDashboardObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskSQLTaskFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]SQLTaskQueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskObservation.
func (in *TaskSQLTaskObservation) DeepCopy() *TaskSQLTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskParameters) DeepCopyInto(out *TaskSQLTaskParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]SQLTaskAlertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]SQLTaskDashboardParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskSQLTaskFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]SQLTaskQueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskParameters.
func (in *TaskSQLTaskParameters) DeepCopy() *TaskSQLTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkJarTaskInitParameters) DeepCopyInto(out *TaskSparkJarTaskInitParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkJarTaskInitParameters.
func (in *TaskSparkJarTaskInitParameters) DeepCopy() *TaskSparkJarTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkJarTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkJarTaskObservation) DeepCopyInto(out *TaskSparkJarTaskObservation) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkJarTaskObservation.
func (in *TaskSparkJarTaskObservation) DeepCopy() *TaskSparkJarTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSparkJarTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkJarTaskParameters) DeepCopyInto(out *TaskSparkJarTaskParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkJarTaskParameters.
func (in *TaskSparkJarTaskParameters) DeepCopy() *TaskSparkJarTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkJarTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkPythonTaskInitParameters) DeepCopyInto(out *TaskSparkPythonTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkPythonTaskInitParameters.
func (in *TaskSparkPythonTaskInitParameters) DeepCopy() *TaskSparkPythonTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkPythonTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkPythonTaskObservation) DeepCopyInto(out *TaskSparkPythonTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkPythonTaskObservation.
func (in *TaskSparkPythonTaskObservation) DeepCopy() *TaskSparkPythonTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSparkPythonTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkPythonTaskParameters) DeepCopyInto(out *TaskSparkPythonTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkPythonTaskParameters.
func (in *TaskSparkPythonTaskParameters) DeepCopy() *TaskSparkPythonTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkPythonTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkSubmitTaskInitParameters) DeepCopyInto(out *TaskSparkSubmitTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkSubmitTaskInitParameters.
func (in *TaskSparkSubmitTaskInitParameters) DeepCopy() *TaskSparkSubmitTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkSubmitTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkSubmitTaskObservation) DeepCopyInto(out *TaskSparkSubmitTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkSubmitTaskObservation.
func (in *TaskSparkSubmitTaskObservation) DeepCopy() *TaskSparkSubmitTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSparkSubmitTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkSubmitTaskParameters) DeepCopyInto(out *TaskSparkSubmitTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkSubmitTaskParameters.
func (in *TaskSparkSubmitTaskParameters) DeepCopy() *TaskSparkSubmitTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkSubmitTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskWebhookNotificationsInitParameters) DeepCopyInto(out *TaskWebhookNotificationsInitParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]WebhookNotificationsOnDurationWarningThresholdExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]WebhookNotificationsOnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]WebhookNotificationsOnStartInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]WebhookNotificationsOnSuccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskWebhookNotificationsInitParameters.
func (in *TaskWebhookNotificationsInitParameters) DeepCopy() *TaskWebhookNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskWebhookNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskWebhookNotificationsObservation) DeepCopyInto(out *TaskWebhookNotificationsObservation) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]WebhookNotificationsOnDurationWarningThresholdExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]WebhookNotificationsOnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]WebhookNotificationsOnStartObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]WebhookNotificationsOnSuccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskWebhookNotificationsObservation.
func (in *TaskWebhookNotificationsObservation) DeepCopy() *TaskWebhookNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskWebhookNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskWebhookNotificationsParameters) DeepCopyInto(out *TaskWebhookNotificationsParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]WebhookNotificationsOnDurationWarningThresholdExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]WebhookNotificationsOnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]WebhookNotificationsOnStartParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]WebhookNotificationsOnSuccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskWebhookNotificationsParameters.
func (in *TaskWebhookNotificationsParameters) DeepCopy() *TaskWebhookNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskWebhookNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerInitParameters) DeepCopyInto(out *TriggerInitParameters) {
	*out = *in
	if in.FileArrival != nil {
		in, out := &in.FileArrival, &out.FileArrival
		*out = make([]FileArrivalInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerInitParameters.
func (in *TriggerInitParameters) DeepCopy() *TriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerObservation) DeepCopyInto(out *TriggerObservation) {
	*out = *in
	if in.FileArrival != nil {
		in, out := &in.FileArrival, &out.FileArrival
		*out = make([]FileArrivalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerObservation.
func (in *TriggerObservation) DeepCopy() *TriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerParameters) DeepCopyInto(out *TriggerParameters) {
	*out = *in
	if in.FileArrival != nil {
		in, out := &in.FileArrival, &out.FileArrival
		*out = make([]FileArrivalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerParameters.
func (in *TriggerParameters) DeepCopy() *TriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesInitParameters) DeepCopyInto(out *VolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesInitParameters.
func (in *VolumesInitParameters) DeepCopy() *VolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesObservation) DeepCopyInto(out *VolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesObservation.
func (in *VolumesObservation) DeepCopy() *VolumesObservation {
	if in == nil {
		return nil
	}
	out := new(VolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesParameters) DeepCopyInto(out *VolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesParameters.
func (in *VolumesParameters) DeepCopy() *VolumesParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsInitParameters) DeepCopyInto(out *WebhookNotificationsInitParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]OnDurationWarningThresholdExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]OnStartInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsInitParameters.
func (in *WebhookNotificationsInitParameters) DeepCopy() *WebhookNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsObservation) DeepCopyInto(out *WebhookNotificationsObservation) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]OnDurationWarningThresholdExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]OnStartObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsObservation.
func (in *WebhookNotificationsObservation) DeepCopy() *WebhookNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopyInto(out *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnDurationWarningThresholdExceededInitParameters.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopy() *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnDurationWarningThresholdExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopyInto(out *WebhookNotificationsOnDurationWarningThresholdExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnDurationWarningThresholdExceededObservation.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopy() *WebhookNotificationsOnDurationWarningThresholdExceededObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnDurationWarningThresholdExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopyInto(out *WebhookNotificationsOnDurationWarningThresholdExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnDurationWarningThresholdExceededParameters.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopy() *WebhookNotificationsOnDurationWarningThresholdExceededParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnDurationWarningThresholdExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnFailureInitParameters) DeepCopyInto(out *WebhookNotificationsOnFailureInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnFailureInitParameters.
func (in *WebhookNotificationsOnFailureInitParameters) DeepCopy() *WebhookNotificationsOnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnFailureObservation) DeepCopyInto(out *WebhookNotificationsOnFailureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnFailureObservation.
func (in *WebhookNotificationsOnFailureObservation) DeepCopy() *WebhookNotificationsOnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnFailureParameters) DeepCopyInto(out *WebhookNotificationsOnFailureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnFailureParameters.
func (in *WebhookNotificationsOnFailureParameters) DeepCopy() *WebhookNotificationsOnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStartInitParameters) DeepCopyInto(out *WebhookNotificationsOnStartInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStartInitParameters.
func (in *WebhookNotificationsOnStartInitParameters) DeepCopy() *WebhookNotificationsOnStartInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStartInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStartObservation) DeepCopyInto(out *WebhookNotificationsOnStartObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStartObservation.
func (in *WebhookNotificationsOnStartObservation) DeepCopy() *WebhookNotificationsOnStartObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStartObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStartParameters) DeepCopyInto(out *WebhookNotificationsOnStartParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStartParameters.
func (in *WebhookNotificationsOnStartParameters) DeepCopy() *WebhookNotificationsOnStartParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStartParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnSuccessInitParameters) DeepCopyInto(out *WebhookNotificationsOnSuccessInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnSuccessInitParameters.
func (in *WebhookNotificationsOnSuccessInitParameters) DeepCopy() *WebhookNotificationsOnSuccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnSuccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnSuccessObservation) DeepCopyInto(out *WebhookNotificationsOnSuccessObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnSuccessObservation.
func (in *WebhookNotificationsOnSuccessObservation) DeepCopy() *WebhookNotificationsOnSuccessObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnSuccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnSuccessParameters) DeepCopyInto(out *WebhookNotificationsOnSuccessParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnSuccessParameters.
func (in *WebhookNotificationsOnSuccessParameters) DeepCopy() *WebhookNotificationsOnSuccessParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnSuccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsParameters) DeepCopyInto(out *WebhookNotificationsParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]OnDurationWarningThresholdExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]OnStartParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsParameters.
func (in *WebhookNotificationsParameters) DeepCopy() *WebhookNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeClientsInitParameters) DeepCopyInto(out *WorkloadTypeClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeClientsInitParameters.
func (in *WorkloadTypeClientsInitParameters) DeepCopy() *WorkloadTypeClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeClientsObservation) DeepCopyInto(out *WorkloadTypeClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeClientsObservation.
func (in *WorkloadTypeClientsObservation) DeepCopy() *WorkloadTypeClientsObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeClientsParameters) DeepCopyInto(out *WorkloadTypeClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeClientsParameters.
func (in *WorkloadTypeClientsParameters) DeepCopy() *WorkloadTypeClientsParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeInitParameters) DeepCopyInto(out *WorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeInitParameters.
func (in *WorkloadTypeInitParameters) DeepCopy() *WorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeObservation) DeepCopyInto(out *WorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeObservation.
func (in *WorkloadTypeObservation) DeepCopy() *WorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeParameters) DeepCopyInto(out *WorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeParameters.
func (in *WorkloadTypeParameters) DeepCopy() *WorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceInitParameters) DeepCopyInto(out *WorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceInitParameters.
func (in *WorkspaceInitParameters) DeepCopy() *WorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation) DeepCopyInto(out *WorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation.
func (in *WorkspaceObservation) DeepCopy() *WorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters) DeepCopyInto(out *WorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters.
func (in *WorkspaceParameters) DeepCopy() *WorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CranInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type CranObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type CranParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type LibrariesInitParameters struct {
	Cran []CranInitParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []MavenInitParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []PypiInitParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type LibrariesObservation struct {
	Cran []CranObservation `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []MavenObservation `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []PypiObservation `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type LibrariesParameters struct {

	// +kubebuilder:validation:Optional
	Cran []CranParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	// +kubebuilder:validation:Optional
	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	// +kubebuilder:validation:Optional
	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	// +kubebuilder:validation:Optional
	Maven []MavenParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	// +kubebuilder:validation:Optional
	Pypi []PypiParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	// +kubebuilder:validation:Optional
	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type MavenInitParameters struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type MavenObservation struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type MavenParameters struct {

	// +kubebuilder:validation:Optional
	Coordinates *string `json:"coordinates" tf:"coordinates,omitempty"`

	// +kubebuilder:validation:Optional
	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type PolicyInitParameters struct {

	// Policy definition: JSON document expressed in Databricks Policy Definition Language. Cannot be used with policy_family_id
	Definition *string `json:"definition,omitempty" tf:"definition,omitempty"`

	// Additional human-readable description of the cluster policy.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// blocks defining individual libraries that will be installed on the cluster that uses a given cluster policy. See databricks_cluster for more details about supported library types.
	Libraries []LibrariesInitParameters `json:"libraries,omitempty" tf:"libraries,omitempty"`

	// Maximum number of clusters allowed per user. When omitted, there is no limit. If specified, value must be greater than zero.
	MaxClustersPerUser *float64 `json:"maxClustersPerUser,omitempty" tf:"max_clusters_per_user,omitempty"`

	// the name of the built-in cluster policy.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// settings to override in the built-in cluster policy.
	PolicyFamilyDefinitionOverrides *string `json:"policyFamilyDefinitionOverrides,omitempty" tf:"policy_family_definition_overrides,omitempty"`

	// the ID of the cluster policy family used for built-in cluster policy.
	PolicyFamilyID *string `json:"policyFamilyId,omitempty" tf:"policy_family_id,omitempty"`
}

type PolicyObservation struct {

	// Policy definition: JSON document expressed in Databricks Policy Definition Language. Cannot be used with policy_family_id
	Definition *string `json:"definition,omitempty" tf:"definition,omitempty"`

	// Additional human-readable description of the cluster policy.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Canonical unique identifier for the cluster policy. This is equal to policy_id.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// blocks defining individual libraries that will be installed on the cluster that uses a given cluster policy. See databricks_cluster for more details about supported library types.
	Libraries []LibrariesObservation `json:"libraries,omitempty" tf:"libraries,omitempty"`

	// Maximum number of clusters allowed per user. When omitted, there is no limit. If specified, value must be greater than zero.
	MaxClustersPerUser *float64 `json:"maxClustersPerUser,omitempty" tf:"max_clusters_per_user,omitempty"`

	// the name of the built-in cluster policy.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// settings to override in the built-in cluster policy.
	PolicyFamilyDefinitionOverrides *string `json:"policyFamilyDefinitionOverrides,omitempty" tf:"policy_family_definition_overrides,omitempty"`

	// the ID of the cluster policy family used for built-in cluster policy.
	PolicyFamilyID *string `json:"policyFamilyId,omitempty" tf:"policy_family_id,omitempty"`

	// Canonical unique identifier for the cluster policy.
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`
}

type PolicyParameters struct {

	// Policy definition: JSON document expressed in Databricks Policy Definition Language. Cannot be used with policy_family_id
	// +kubebuilder:validation:Optional
	Definition *string `json:"definition,omitempty" tf:"definition,omitempty"`

	// Additional human-readable description of the cluster policy.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// blocks defining individual libraries that will be installed on the cluster that uses a given cluster policy. See databricks_cluster for more details about supported library types.
	// +kubebuilder:validation:Optional
	Libraries []LibrariesParameters `json:"libraries,omitempty" tf:"libraries,omitempty"`

	// Maximum number of clusters allowed per user. When omitted, there is no limit. If specified, value must be greater than zero.
	// +kubebuilder:validation:Optional
	MaxClustersPerUser *float64 `json:"maxClustersPerUser,omitempty" tf:"max_clusters_per_user,omitempty"`

	// the name of the built-in cluster policy.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// settings to override in the built-in cluster policy.
	// +kubebuilder:validation:Optional
	PolicyFamilyDefinitionOverrides *string `json:"policyFamilyDefinitionOverrides,omitempty" tf:"policy_family_definition_overrides,omitempty"`

	// the ID of the cluster policy family used for built-in cluster policy.
	// +kubebuilder:validation:Optional
	PolicyFamilyID *string `json:"policyFamilyId,omitempty" tf:"policy_family_id,omitempty"`
}

type PypiInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type PypiObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type PypiParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

// PolicySpec defines the desired state of Policy
type PolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PolicyInitParameters `json:"initProvider,omitempty"`
}

// PolicyStatus defines the observed state of Policy.
type PolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Policy is the Schema for the Policys API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,databricks}
type Policy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   PolicySpec   `json:"spec"`
	Status PolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyList contains a list of Policys
type PolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Policy `json:"items"`
}

// Repository type metadata.
var (
	Policy_Kind             = "Policy"
	Policy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Policy_Kind}.String()
	Policy_KindAPIVersion   = Policy_Kind + "." + CRDGroupVersion.String()
	Policy_GroupVersionKind = CRDGroupVersion.WithKind(Policy_Kind)
)

func init() {
	SchemeBuilder.Register(&Policy{}, &PolicyList{})
}
